{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"html\", \"editorStyle\", \"useContainer\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport { WebView } from 'react-native-webview';\nimport { actions, messages } from \"./const\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createHTML } from \"./editor\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlatformIOS = Platform.OS === 'ios';\nvar RichTextEditor = function (_Component) {\n  _inherits(RichTextEditor, _Component);\n  var _super = _createSuper(RichTextEditor);\n\n  function RichTextEditor(props) {\n    var _this;\n    _classCallCheck(this, RichTextEditor);\n    _this = _super.call(this, props);\n    var that = _assertThisInitialized(_this);\n    that.renderWebView = that.renderWebView.bind(that);\n    that.onMessage = that.onMessage.bind(that);\n    that.sendAction = that.sendAction.bind(that);\n    that.registerToolbar = that.registerToolbar.bind(that);\n    that._onKeyboardWillShow = that._onKeyboardWillShow.bind(that);\n    that._onKeyboardWillHide = that._onKeyboardWillHide.bind(that);\n    that.init = that.init.bind(that);\n    that.setRef = that.setRef.bind(that);\n    that.onViewLayout = that.onViewLayout.bind(that);\n    that.unmount = false;\n    that._keyOpen = false;\n    that._focus = false;\n    that.layout = {};\n    that.selectionChangeListeners = [];\n    var _props$editorStyle = props.editorStyle;\n    _props$editorStyle = _props$editorStyle === void 0 ? {} : _props$editorStyle;\n    var backgroundColor = _props$editorStyle.backgroundColor,\n      color = _props$editorStyle.color,\n      placeholderColor = _props$editorStyle.placeholderColor,\n      initialCSSText = _props$editorStyle.initialCSSText,\n      cssText = _props$editorStyle.cssText,\n      contentCSSText = _props$editorStyle.contentCSSText,\n      caretColor = _props$editorStyle.caretColor,\n      html = props.html,\n      pasteAsPlainText = props.pasteAsPlainText,\n      onPaste = props.onPaste,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onInput = props.onInput,\n      enterKeyHint = props.enterKeyHint,\n      autoCapitalize = props.autoCapitalize,\n      autoCorrect = props.autoCorrect,\n      defaultParagraphSeparator = props.defaultParagraphSeparator,\n      firstFocusEnd = props.firstFocusEnd,\n      useContainer = props.useContainer,\n      initialHeight = props.initialHeight;\n    that.state = {\n      html: {\n        html: html || createHTML({\n          backgroundColor: backgroundColor,\n          color: color,\n          caretColor: caretColor,\n          placeholderColor: placeholderColor,\n          initialCSSText: initialCSSText,\n          cssText: cssText,\n          contentCSSText: contentCSSText,\n          pasteAsPlainText: pasteAsPlainText,\n          pasteListener: !!onPaste,\n          keyUpListener: !!onKeyUp,\n          keyDownListener: !!onKeyDown,\n          inputListener: !!onInput,\n          enterKeyHint: enterKeyHint,\n          autoCapitalize: autoCapitalize,\n          autoCorrect: autoCorrect,\n          defaultParagraphSeparator: defaultParagraphSeparator,\n          firstFocusEnd: firstFocusEnd,\n          useContainer: useContainer\n        })\n      },\n      keyboardHeight: 0,\n      height: initialHeight\n    };\n    that.focusListeners = [];\n    return _this;\n  }\n  _createClass(RichTextEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unmount = false;\n      if (PlatformIOS) {\n        this.keyboardEventListeners = [Keyboard.addListener('keyboardWillShow', this._onKeyboardWillShow), Keyboard.addListener('keyboardWillHide', this._onKeyboardWillHide)];\n      } else {\n        this.keyboardEventListeners = [Keyboard.addListener('keyboardDidShow', this._onKeyboardWillShow), Keyboard.addListener('keyboardDidHide', this._onKeyboardWillHide)];\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmount = true;\n      this.keyboardEventListeners.forEach(function (eventListener) {\n        return eventListener.remove();\n      });\n    }\n  }, {\n    key: \"_onKeyboardWillShow\",\n    value: function _onKeyboardWillShow(event) {\n      this._keyOpen = true;\n    }\n  }, {\n    key: \"_onKeyboardWillHide\",\n    value: function _onKeyboardWillHide(event) {\n      this._keyOpen = false;\n    }\n\n  }, {\n    key: \"onMessage\",\n    value:\n\n    function onMessage(event) {\n      var _console;\n      var that = this;\n      var _that$props = that.props,\n        onFocus = _that$props.onFocus,\n        onBlur = _that$props.onBlur,\n        onChange = _that$props.onChange,\n        onPaste = _that$props.onPaste,\n        onKeyUp = _that$props.onKeyUp,\n        onKeyDown = _that$props.onKeyDown,\n        onInput = _that$props.onInput,\n        onMessage = _that$props.onMessage,\n        onCursorPosition = _that$props.onCursorPosition;\n      try {\n        var message = JSON.parse(event.nativeEvent.data);\n        var data = message.data;\n        switch (message.type) {\n          case messages.CONTENT_HTML_RESPONSE:\n            if (that.contentResolve) {\n              that.contentResolve(message.data);\n              that.contentResolve = undefined;\n              that.contentReject = undefined;\n              if (that.pendingContentHtml) {\n                clearTimeout(that.pendingContentHtml);\n                that.pendingContentHtml = undefined;\n              }\n            }\n            break;\n          case messages.LOG:\n            (_console = console).log.apply(_console, ['FROM EDIT:'].concat(_toConsumableArray(data)));\n            break;\n          case messages.SELECTION_CHANGE:\n            var items = message.data;\n            that.selectionChangeListeners.map(function (listener) {\n              listener(items);\n            });\n            break;\n          case messages.CONTENT_FOCUSED:\n            that._focus = true;\n            that.focusListeners.map(function (da) {\n              return da();\n            });\n            onFocus == null ? void 0 : onFocus();\n            break;\n          case messages.CONTENT_BLUR:\n            that._focus = false;\n            onBlur == null ? void 0 : onBlur();\n            break;\n          case messages.CONTENT_CHANGE:\n            onChange == null ? void 0 : onChange(data);\n            break;\n          case messages.CONTENT_PASTED:\n            onPaste == null ? void 0 : onPaste(data);\n            break;\n          case messages.CONTENT_KEYUP:\n            onKeyUp == null ? void 0 : onKeyUp(data);\n            break;\n          case messages.CONTENT_KEYDOWN:\n            onKeyDown == null ? void 0 : onKeyDown(data);\n            break;\n          case messages.ON_INPUT:\n            onInput == null ? void 0 : onInput(data);\n            break;\n          case messages.OFFSET_HEIGHT:\n            that.setWebHeight(data);\n            break;\n          case messages.OFFSET_Y:\n            var offsetY = Number.parseInt(Number.parseInt(data) + that.layout.y || 0);\n            offsetY > 0 && onCursorPosition(offsetY);\n            break;\n          default:\n            onMessage == null ? void 0 : onMessage(message);\n            break;\n        }\n      } catch (e) {\n      }\n    }\n  }, {\n    key: \"setWebHeight\",\n    value: function setWebHeight(height) {\n      var _this$props = this.props,\n        onHeightChange = _this$props.onHeightChange,\n        useContainer = _this$props.useContainer,\n        initialHeight = _this$props.initialHeight;\n      if (height !== this.state.height) {\n        var maxHeight = Math.max(height, initialHeight);\n        if (!this.unmount && useContainer && maxHeight >= initialHeight) {\n          this.setState({\n            height: maxHeight\n          });\n        }\n        onHeightChange && onHeightChange(height);\n      }\n    }\n\n  }, {\n    key: \"sendAction\",\n    value:\n    function sendAction(type, action, data, options) {\n      var jsonString = JSON.stringify({\n        type: type,\n        name: action,\n        data: data,\n        options: options\n      });\n      if (!this.unmount && this.webviewBridge) {\n        this.webviewBridge.postMessage(jsonString);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this$props2 = this.props,\n        editorStyle = _this$props2.editorStyle,\n        disabled = _this$props2.disabled,\n        placeholder = _this$props2.placeholder;\n      if (prevProps.editorStyle !== editorStyle) {\n        editorStyle && this.setContentStyle(editorStyle);\n      }\n      if (disabled !== prevProps.disabled) {\n        this.setDisable(disabled);\n      }\n      if (placeholder !== prevProps.placeholder) {\n        this.setPlaceholder(placeholder);\n      }\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(ref) {\n      this.webviewBridge = ref;\n    }\n  }, {\n    key: \"renderWebView\",\n    value: function renderWebView() {\n      var that = this;\n      var _that$props2 = that.props,\n        html = _that$props2.html,\n        editorStyle = _that$props2.editorStyle,\n        useContainer = _that$props2.useContainer,\n        style = _that$props2.style,\n        rest = _objectWithoutProperties(_that$props2, _excluded);\n      var viewHTML = that.state.html;\n      return _jsxs(_Fragment, {\n        children: [_jsx(WebView, _objectSpread(_objectSpread({\n          useWebKit: true,\n          scrollEnabled: false,\n          hideKeyboardAccessoryView: true,\n          keyboardDisplayRequiresUserAction: false,\n          nestedScrollEnabled: !useContainer,\n          style: [styles.webview, style]\n        }, rest), {}, {\n          ref: that.setRef,\n          onMessage: that.onMessage,\n          originWhitelist: ['*'],\n          dataDetectorTypes: 'none',\n          domStorageEnabled: false,\n          bounces: false,\n          javaScriptEnabled: true,\n          source: viewHTML,\n          onLoad: that.init\n        })), Platform.OS === 'android' && _jsx(TextInput, {\n          ref: function ref(_ref) {\n            return that._input = _ref;\n          },\n          style: styles._input\n        })]\n      });\n    }\n  }, {\n    key: \"onViewLayout\",\n    value: function onViewLayout(_ref2) {\n      var layout = _ref2.nativeEvent.layout;\n      this.layout = layout;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var height = this.state.height;\n\n      var _this$props3 = this.props,\n        useContainer = _this$props3.useContainer,\n        style = _this$props3.style;\n      return useContainer ? _jsx(View, {\n        style: [style, {\n          height: height\n        }],\n        onLayout: this.onViewLayout,\n        children: this.renderWebView()\n      }) : this.renderWebView();\n    }\n\n  }, {\n    key: \"registerToolbar\",\n    value:\n\n    function registerToolbar(listener) {\n      this.selectionChangeListeners = [].concat(_toConsumableArray(this.selectionChangeListeners), [listener]);\n    }\n\n  }, {\n    key: \"setContentFocusHandler\",\n    value:\n    function setContentFocusHandler(listener) {\n      this.focusListeners.push(listener);\n    }\n  }, {\n    key: \"setContentHTML\",\n    value: function setContentHTML(html) {\n      this.sendAction(actions.content, 'setHtml', html);\n    }\n  }, {\n    key: \"setPlaceholder\",\n    value: function setPlaceholder(placeholder) {\n      this.sendAction(actions.content, 'setPlaceholder', placeholder);\n    }\n  }, {\n    key: \"setContentStyle\",\n    value: function setContentStyle(styles) {\n      this.sendAction(actions.content, 'setContentStyle', styles);\n    }\n  }, {\n    key: \"setDisable\",\n    value: function setDisable(dis) {\n      this.sendAction(actions.content, 'setDisable', !!dis);\n    }\n  }, {\n    key: \"blurContentEditor\",\n    value: function blurContentEditor() {\n      this.sendAction(actions.content, 'blur');\n    }\n  }, {\n    key: \"focusContentEditor\",\n    value: function focusContentEditor() {\n      this.showAndroidKeyboard();\n      this.sendAction(actions.content, 'focus');\n    }\n\n  }, {\n    key: \"showAndroidKeyboard\",\n    value:\n    function showAndroidKeyboard() {\n      var that = this;\n      if (Platform.OS === 'android') {\n        !that._keyOpen && that._input.focus();\n        that.webviewBridge.requestFocus && that.webviewBridge.requestFocus();\n      }\n    }\n\n  }, {\n    key: \"insertImage\",\n    value:\n    function insertImage(attributes, style) {\n      this.sendAction(actions.insertImage, 'result', attributes, style);\n    }\n\n  }, {\n    key: \"insertVideo\",\n    value:\n    function insertVideo(attributes, style) {\n      this.sendAction(actions.insertVideo, 'result', attributes, style);\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(text) {\n      this.sendAction(actions.insertText, 'result', text);\n    }\n  }, {\n    key: \"insertHTML\",\n    value: function insertHTML(html) {\n      this.sendAction(actions.insertHTML, 'result', html);\n    }\n  }, {\n    key: \"insertLink\",\n    value: function insertLink(title, url) {\n      if (url) {\n        this.showAndroidKeyboard();\n        this.sendAction(actions.insertLink, 'result', {\n          title: title,\n          url: url\n        });\n      }\n    }\n  }, {\n    key: \"preCode\",\n    value: function preCode(type) {\n      this.sendAction(actions.code, 'result', type);\n    }\n  }, {\n    key: \"setFontSize\",\n    value: function setFontSize(size) {\n      this.sendAction(actions.fontSize, 'result', size);\n    }\n  }, {\n    key: \"setForeColor\",\n    value: function setForeColor(color) {\n      this.sendAction(actions.foreColor, 'result', color);\n    }\n  }, {\n    key: \"setHiliteColor\",\n    value: function setHiliteColor(color) {\n      this.sendAction(actions.hiliteColor, 'result', color);\n    }\n  }, {\n    key: \"setFontName\",\n    value: function setFontName(name) {\n      this.sendAction(actions.fontName, 'result', name);\n    }\n  }, {\n    key: \"commandDOM\",\n    value: function commandDOM(command) {\n      if (command) {\n        this.sendAction(actions.content, 'commandDOM', command);\n      }\n    }\n  }, {\n    key: \"command\",\n    value: function command(_command) {\n      if (_command) {\n        this.sendAction(actions.content, 'command', _command);\n      }\n    }\n  }, {\n    key: \"dismissKeyboard\",\n    value: function dismissKeyboard() {\n      this._focus ? this.blurContentEditor() : Keyboard.dismiss();\n    }\n  }, {\n    key: \"isKeyboardOpen\",\n    get: function get() {\n      return this._keyOpen;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var that = this;\n      var _that$props3 = that.props,\n        initialFocus = _that$props3.initialFocus,\n        initialContentHTML = _that$props3.initialContentHTML,\n        placeholder = _that$props3.placeholder,\n        editorInitializedCallback = _that$props3.editorInitializedCallback,\n        disabled = _that$props3.disabled;\n      initialContentHTML && that.setContentHTML(initialContentHTML);\n      placeholder && that.setPlaceholder(placeholder);\n      that.setDisable(disabled);\n      editorInitializedCallback();\n\n      initialFocus && !disabled && that.focusContentEditor();\n      that.sendAction(actions.init);\n    }\n\n  }, {\n    key: \"getContentHtml\",\n    value: function () {\n      var _getContentHtml = _asyncToGenerator(function* () {\n        var _this2 = this;\n        return new Promise(function (resolve, reject) {\n          _this2.contentResolve = resolve;\n          _this2.contentReject = reject;\n          _this2.sendAction(actions.content, 'postHtml');\n          _this2.pendingContentHtml = setTimeout(function () {\n            if (_this2.contentReject) {\n              _this2.contentReject('timeout');\n            }\n          }, 5000);\n        });\n      });\n      function getContentHtml() {\n        return _getContentHtml.apply(this, arguments);\n      }\n      return getContentHtml;\n    }()\n  }]);\n  return RichTextEditor;\n}(Component);\nRichTextEditor.defaultProps = {\n  contentInset: {},\n  style: {},\n  placeholder: '',\n  initialContentHTML: '',\n  initialFocus: false,\n  disabled: false,\n  useContainer: true,\n  pasteAsPlainText: false,\n  autoCapitalize: 'off',\n  defaultParagraphSeparator: 'div',\n  editorInitializedCallback: function editorInitializedCallback() {},\n  initialHeight: 0\n};\nexport { RichTextEditor as default };\nvar styles = StyleSheet.create({\n  _input: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    zIndex: -999,\n    bottom: -999,\n    left: -999\n  },\n  webview: {\n    backgroundColor: \"transparent\"\n  }\n});","map":{"version":3,"names":["React","Component","WebView","actions","messages","createHTML","PlatformIOS","Platform","OS","RichTextEditor","props","that","renderWebView","bind","onMessage","sendAction","registerToolbar","_onKeyboardWillShow","_onKeyboardWillHide","init","setRef","onViewLayout","unmount","_keyOpen","_focus","layout","selectionChangeListeners","editorStyle","backgroundColor","color","placeholderColor","initialCSSText","cssText","contentCSSText","caretColor","html","pasteAsPlainText","onPaste","onKeyUp","onKeyDown","onInput","enterKeyHint","autoCapitalize","autoCorrect","defaultParagraphSeparator","firstFocusEnd","useContainer","initialHeight","state","pasteListener","keyUpListener","keyDownListener","inputListener","keyboardHeight","height","focusListeners","keyboardEventListeners","Keyboard","addListener","forEach","eventListener","remove","event","onFocus","onBlur","onChange","onCursorPosition","message","JSON","parse","nativeEvent","data","type","CONTENT_HTML_RESPONSE","contentResolve","undefined","contentReject","pendingContentHtml","clearTimeout","LOG","console","log","SELECTION_CHANGE","items","map","listener","CONTENT_FOCUSED","da","CONTENT_BLUR","CONTENT_CHANGE","CONTENT_PASTED","CONTENT_KEYUP","CONTENT_KEYDOWN","ON_INPUT","OFFSET_HEIGHT","setWebHeight","OFFSET_Y","offsetY","Number","parseInt","y","e","onHeightChange","maxHeight","Math","max","setState","action","options","jsonString","stringify","name","webviewBridge","postMessage","prevProps","prevState","snapshot","disabled","placeholder","setContentStyle","setDisable","setPlaceholder","ref","style","rest","viewHTML","styles","webview","_input","push","content","dis","showAndroidKeyboard","focus","requestFocus","attributes","insertImage","insertVideo","text","insertText","insertHTML","title","url","insertLink","code","size","fontSize","foreColor","hiliteColor","fontName","command","blurContentEditor","dismiss","initialFocus","initialContentHTML","editorInitializedCallback","setContentHTML","focusContentEditor","Promise","resolve","reject","setTimeout","defaultProps","contentInset","StyleSheet","create","position","width","zIndex","bottom","left"],"sources":["/Users/matthieu/Documents/tbpa-mobile/node_modules/react-native-pell-rich-editor/src/RichEditor.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {WebView} from 'react-native-webview';\nimport {actions, messages} from './const';\nimport {Keyboard, Platform, StyleSheet, TextInput, View} from 'react-native';\nimport {createHTML} from './editor';\n\nconst PlatformIOS = Platform.OS === 'ios';\n\nexport default class RichTextEditor extends Component {\n    // static propTypes = {\n    //     initialContentHTML: PropTypes.string,\n    //     editorInitializedCallback: PropTypes.func,\n    //     onChange: PropTypes.func,\n    //     onHeightChange: PropTypes.func,\n    //     initialFocus: PropTypes.bool,\n    //     disabled: PropTypes.bool,\n    //     onPaste: PropTypes.func,\n    //     onKeyUp: PropTypes.func,\n    //     onKeyDown: PropTypes.func,\n    //     onFocus: PropTypes.func,\n    // };\n\n    static defaultProps = {\n        contentInset: {},\n        style: {},\n        placeholder: '',\n        initialContentHTML: '',\n        initialFocus: false,\n        disabled: false,\n        useContainer: true,\n        pasteAsPlainText: false,\n        autoCapitalize: 'off',\n        defaultParagraphSeparator: 'div',\n        editorInitializedCallback: () => {},\n        initialHeight: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        let that = this;\n        that.renderWebView = that.renderWebView.bind(that);\n        that.onMessage = that.onMessage.bind(that);\n        that.sendAction = that.sendAction.bind(that);\n        that.registerToolbar = that.registerToolbar.bind(that);\n        that._onKeyboardWillShow = that._onKeyboardWillShow.bind(that);\n        that._onKeyboardWillHide = that._onKeyboardWillHide.bind(that);\n        that.init = that.init.bind(that);\n        that.setRef = that.setRef.bind(that);\n        that.onViewLayout = that.onViewLayout.bind(that);\n        that.unmount = false;\n        that._keyOpen = false;\n        that._focus = false;\n        that.layout = {};\n        that.selectionChangeListeners = [];\n        const {\n            editorStyle: {backgroundColor, color, placeholderColor, initialCSSText, cssText, contentCSSText, caretColor} = {},\n            html,\n            pasteAsPlainText,\n            onPaste,\n            onKeyUp,\n            onKeyDown,\n            onInput,\n            enterKeyHint,\n            autoCapitalize,\n            autoCorrect,\n            defaultParagraphSeparator,\n            firstFocusEnd,\n            useContainer,\n            initialHeight,\n        } = props;\n        that.state = {\n            html: {\n                html:\n                    html ||\n                    createHTML({\n                        backgroundColor,\n                        color,\n                        caretColor,\n                        placeholderColor,\n                        initialCSSText,\n                        cssText,\n                        contentCSSText,\n                        pasteAsPlainText,\n                        pasteListener: !!onPaste,\n                        keyUpListener: !!onKeyUp,\n                        keyDownListener: !!onKeyDown,\n                        inputListener: !!onInput,\n                        enterKeyHint,\n                        autoCapitalize,\n                        autoCorrect,\n                        defaultParagraphSeparator,\n                        firstFocusEnd,\n                        useContainer,\n                    }),\n            },\n            keyboardHeight: 0,\n            height: initialHeight,\n        };\n        that.focusListeners = [];\n    }\n\n    componentDidMount() {\n        this.unmount = false;\n        if (PlatformIOS) {\n            this.keyboardEventListeners = [\n                Keyboard.addListener('keyboardWillShow', this._onKeyboardWillShow),\n                Keyboard.addListener('keyboardWillHide', this._onKeyboardWillHide),\n            ];\n        } else {\n            this.keyboardEventListeners = [\n                Keyboard.addListener('keyboardDidShow', this._onKeyboardWillShow),\n                Keyboard.addListener('keyboardDidHide', this._onKeyboardWillHide),\n            ];\n        }\n    }\n\n    componentWillUnmount() {\n        this.unmount = true;\n        this.keyboardEventListeners.forEach(eventListener => eventListener.remove());\n    }\n\n    _onKeyboardWillShow(event) {\n        this._keyOpen = true;\n        // console.log('!!!!', event);\n        /*const newKeyboardHeight = event.endCoordinates.height;\n        if (this.state.keyboardHeight === newKeyboardHeight) {\n            return;\n        }\n        if (newKeyboardHeight) {\n            this.setEditorAvailableHeightBasedOnKeyboardHeight(newKeyboardHeight);\n        }\n        this.setState({keyboardHeight: newKeyboardHeight});*/\n    }\n\n    _onKeyboardWillHide(event) {\n        this._keyOpen = false;\n        // this.setState({keyboardHeight: 0});\n    }\n\n    /*setEditorAvailableHeightBasedOnKeyboardHeight(keyboardHeight) {\n        const {top = 0, bottom = 0} = this.props.contentInset;\n        const {marginTop = 0, marginBottom = 0} = this.props.style;\n        const spacing = marginTop + marginBottom + top + bottom;\n\n        const editorAvailableHeight = Dimensions.get('window').height - keyboardHeight - spacing;\n        // this.setEditorHeight(editorAvailableHeight);\n    }*/\n\n    onMessage(event) {\n        const that = this;\n        const {onFocus, onBlur, onChange, onPaste, onKeyUp, onKeyDown, onInput, onMessage, onCursorPosition} = that.props;\n        try {\n            const message = JSON.parse(event.nativeEvent.data);\n            const data = message.data;\n            switch (message.type) {\n                case messages.CONTENT_HTML_RESPONSE:\n                    if (that.contentResolve) {\n                        that.contentResolve(message.data);\n                        that.contentResolve = undefined;\n                        that.contentReject = undefined;\n                        if (that.pendingContentHtml) {\n                            clearTimeout(that.pendingContentHtml);\n                            that.pendingContentHtml = undefined;\n                        }\n                    }\n                    break;\n                case messages.LOG:\n                    console.log('FROM EDIT:', ...data);\n                    break;\n                case messages.SELECTION_CHANGE:\n                    const items = message.data;\n                    that.selectionChangeListeners.map(listener => {\n                        listener(items);\n                    });\n                    break;\n                case messages.CONTENT_FOCUSED:\n                    that._focus = true;\n                    that.focusListeners.map(da => da()); // Subsequent versions will be deleted\n                    onFocus?.();\n                    break;\n                case messages.CONTENT_BLUR:\n                    that._focus = false;\n                    onBlur?.();\n                    break;\n                case messages.CONTENT_CHANGE:\n                    onChange?.(data);\n                    break;\n                case messages.CONTENT_PASTED:\n                    onPaste?.(data);\n                    break;\n                case messages.CONTENT_KEYUP:\n                    onKeyUp?.(data);\n                    break;\n                case messages.CONTENT_KEYDOWN:\n                    onKeyDown?.(data);\n                    break;\n                case messages.ON_INPUT:\n                    onInput?.(data);\n                    break;\n                case messages.OFFSET_HEIGHT:\n                    that.setWebHeight(data);\n                    break;\n                case messages.OFFSET_Y:\n                    let offsetY = Number.parseInt(Number.parseInt(data) + that.layout.y || 0);\n                    offsetY > 0 && onCursorPosition(offsetY);\n                    break;\n                default:\n                    onMessage?.(message);\n                    break;\n            }\n        } catch (e) {\n            //alert('NON JSON MESSAGE');\n        }\n    }\n\n    setWebHeight(height) {\n        const {onHeightChange, useContainer, initialHeight} = this.props;\n        if (height !== this.state.height) {\n            const maxHeight = Math.max(height, initialHeight);\n            if (!this.unmount && useContainer && maxHeight >= initialHeight) {\n                this.setState({height: maxHeight});\n            }\n            onHeightChange && onHeightChange(height);\n        }\n    }\n\n    /**\n     * @param {String} type\n     * @param {String} action\n     * @param {any} data\n     * @param [options]\n     * @private\n     */\n    sendAction(type, action, data, options) {\n        let jsonString = JSON.stringify({type, name: action, data, options});\n        if (!this.unmount && this.webviewBridge) {\n            this.webviewBridge.postMessage(jsonString);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {editorStyle, disabled,placeholder} = this.props;\n        if (prevProps.editorStyle !== editorStyle) {\n            editorStyle && this.setContentStyle(editorStyle);\n        }\n        if (disabled !== prevProps.disabled) {\n            this.setDisable(disabled);\n        }\n        if(placeholder!== prevProps.placeholder){\n            this.setPlaceholder(placeholder);\n        }\n    }\n\n    setRef(ref) {\n        this.webviewBridge = ref;\n    }\n\n    renderWebView() {\n        let that = this;\n        const {html, editorStyle, useContainer, style, ...rest} = that.props;\n        const {html: viewHTML} = that.state;\n        return (\n            <>\n                <WebView\n                    useWebKit={true}\n                    scrollEnabled={false}\n                    hideKeyboardAccessoryView={true}\n                    keyboardDisplayRequiresUserAction={false}\n                    nestedScrollEnabled={!useContainer}\n                    style={[styles.webview, style]}\n                    {...rest}\n                    ref={that.setRef}\n                    onMessage={that.onMessage}\n                    originWhitelist={['*']}\n                    dataDetectorTypes={'none'}\n                    domStorageEnabled={false}\n                    bounces={false}\n                    javaScriptEnabled={true}\n                    source={viewHTML}\n                    onLoad={that.init}\n                />\n                {Platform.OS === 'android' && <TextInput ref={ref => (that._input = ref)} style={styles._input} />}\n            </>\n        );\n    }\n\n    onViewLayout({nativeEvent: {layout}}) {\n        // const {x, y, width, height} = layout;\n        this.layout = layout;\n    }\n\n    render() {\n        let {height} = this.state;\n\n        // useContainer is an optional prop with default value of true\n        // If set to true, it will use a View wrapper with styles and height.\n        // If set to false, it will not use a View wrapper\n        const {useContainer, style} = this.props;\n        return useContainer ? (\n            <View style={[style, {height}]} onLayout={this.onViewLayout}>\n                {this.renderWebView()}\n            </View>\n        ) : (\n            this.renderWebView()\n        );\n    }\n\n    //-------------------------------------------------------------------------------\n    //--------------- Public API\n\n    registerToolbar(listener) {\n        this.selectionChangeListeners = [...this.selectionChangeListeners, listener];\n    }\n\n    /**\n     * Subsequent versions will be deleted, please use onFocus\n     * @deprecated remove\n     * @param listener\n     */\n    setContentFocusHandler(listener) {\n        this.focusListeners.push(listener);\n    }\n\n    setContentHTML(html) {\n        this.sendAction(actions.content, 'setHtml', html);\n    }\n\n    setPlaceholder(placeholder) {\n        this.sendAction(actions.content, 'setPlaceholder', placeholder);\n    }\n\n    setContentStyle(styles) {\n        this.sendAction(actions.content, 'setContentStyle', styles);\n    }\n\n    setDisable(dis) {\n        this.sendAction(actions.content, 'setDisable', !!dis);\n    }\n\n    blurContentEditor() {\n        this.sendAction(actions.content, 'blur');\n    }\n\n    focusContentEditor() {\n        this.showAndroidKeyboard();\n        this.sendAction(actions.content, 'focus');\n    }\n\n    /**\n     * open android keyboard\n     * @platform android\n     */\n    showAndroidKeyboard() {\n        let that = this;\n        if (Platform.OS === 'android') {\n            !that._keyOpen && that._input.focus();\n            that.webviewBridge.requestFocus && that.webviewBridge.requestFocus();\n        }\n    }\n\n    /**\n     * @param attributes\n     * @param [style]\n     */\n    insertImage(attributes, style) {\n        this.sendAction(actions.insertImage, 'result', attributes, style);\n    }\n\n    /**\n     * @param attributes\n     * @param [style]\n     */\n    insertVideo(attributes, style) {\n        this.sendAction(actions.insertVideo, 'result', attributes, style);\n    }\n\n    insertText(text) {\n        this.sendAction(actions.insertText, 'result', text);\n    }\n\n    insertHTML(html) {\n        this.sendAction(actions.insertHTML, 'result', html);\n    }\n\n    insertLink(title, url) {\n        if (url) {\n            this.showAndroidKeyboard();\n            this.sendAction(actions.insertLink, 'result', {title, url});\n        }\n    }\n\n    preCode(type) {\n        this.sendAction(actions.code, 'result', type);\n    }\n\n    setFontSize(size) {\n        this.sendAction(actions.fontSize, 'result', size);\n    }\n\n    setForeColor(color) {\n        this.sendAction(actions.foreColor, 'result', color);\n    }\n\n    setHiliteColor(color) {\n        this.sendAction(actions.hiliteColor, 'result', color);\n    }\n\n    setFontName(name) {\n        this.sendAction(actions.fontName, 'result', name);\n    }\n\n    commandDOM(command) {\n        if (command) {\n            this.sendAction(actions.content, 'commandDOM', command);\n        }\n    }\n\n    command(command) {\n        if (command) {\n            this.sendAction(actions.content, 'command', command);\n        }\n    }\n\n    dismissKeyboard() {\n        this._focus ? this.blurContentEditor() : Keyboard.dismiss();\n    }\n\n    get isKeyboardOpen() {\n        return this._keyOpen;\n    }\n\n    init() {\n        let that = this;\n        const {initialFocus, initialContentHTML, placeholder, editorInitializedCallback, disabled} = that.props;\n        initialContentHTML && that.setContentHTML(initialContentHTML);\n        placeholder && that.setPlaceholder(placeholder);\n        that.setDisable(disabled);\n        editorInitializedCallback();\n\n        // initial request focus\n        initialFocus && !disabled && that.focusContentEditor();\n        // no visible ?\n        that.sendAction(actions.init);\n    }\n\n    /**\n     * @deprecated please use onChange\n     * @returns {Promise}\n     */\n    async getContentHtml() {\n        return new Promise((resolve, reject) => {\n            this.contentResolve = resolve;\n            this.contentReject = reject;\n            this.sendAction(actions.content, 'postHtml');\n\n            this.pendingContentHtml = setTimeout(() => {\n                if (this.contentReject) {\n                    this.contentReject('timeout');\n                }\n            }, 5000);\n        });\n    }\n}\n\nconst styles = StyleSheet.create({\n    _input: {\n        position: 'absolute',\n        width: 1,\n        height: 1,\n        zIndex: -999,\n        bottom: -999,\n        left: -999,\n    },\n\n    webview: {\n        backgroundColor: \"transparent\"\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}