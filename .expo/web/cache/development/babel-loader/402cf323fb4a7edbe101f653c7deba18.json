{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"source\", \"onHTMLLoaded\", \"onTTreeChange\", \"onDocumentMetadataLoaded\", \"contentWidth\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RenderHTML;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _RenderHTMLDebug = _interopRequireDefault(require(\"./RenderHTMLDebug\"));\nvar _TRenderEngineProvider = _interopRequireDefault(require(\"./TRenderEngineProvider\"));\nvar _RenderHTMLConfigProvider = _interopRequireDefault(require(\"./RenderHTMLConfigProvider\"));\nvar _RenderHTMLSource = _interopRequireDefault(require(\"./RenderHTMLSource\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction RenderHTML(props) {\n  var source = props.source,\n    onHTMLLoaded = props.onHTMLLoaded,\n    onTTreeChange = props.onTTreeChange,\n    onDocumentMetadataLoaded = props.onDocumentMetadataLoaded,\n    contentWidth = props.contentWidth,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  return _react.default.createElement(_RenderHTMLDebug.default, props, _react.default.createElement(_TRenderEngineProvider.default, otherProps, _react.default.createElement(_RenderHTMLConfigProvider.default, otherProps, _react.default.createElement(_RenderHTMLSource.default, {\n    source: source,\n    onHTMLLoaded: onHTMLLoaded,\n    onTTreeChange: onTTreeChange,\n    onDocumentMetadataLoaded: onDocumentMetadataLoaded,\n    contentWidth: contentWidth\n  }))));\n}","map":{"version":3,"mappings":";;;;;;;;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAgBe,SAASA,UAAT,CAAoBC,KAApB,EAA0D;EACvE,IACEC,MADI,GAOFD,KAPJ,CACEC,MADI;IAEJC,YAFI,GAOFF,KAPJ,CAEEE,YAFI;IAGJC,aAHI,GAOFH,KAPJ,CAGEG,aAHI;IAIJC,wBAJI,GAOFJ,KAPJ,CAIEI,wBAJI;IAKJC,YALI,GAOFL,KAPJ,CAKEK,YALI;IAMDC,sCACDN,KAPJ;EAQA,OACEO,6BAACC,wBAAD,EAAqBR,KAArB,EACEO,6BAACE,8BAAD,EAA2BH,UAA3B,EACEC,6BAACG,iCAAD,EAA8BJ,UAA9B,EACGK,eAAMC,aAAN,CAAoBC,yBAApB,EAAsC;IACrCZ,MADqC,EACrCA,MADqC;IAErCC,YAFqC,EAErCA,YAFqC;IAGrCC,aAHqC,EAGrCA,aAHqC;IAIrCC,wBAJqC,EAIrCA,wBAJqC;IAKrCC;EALqC,CAAtC,CADH,CADF,CADF,CADF;AAeD","names":["RenderHTML","props","source","onHTMLLoaded","onTTreeChange","onDocumentMetadataLoaded","contentWidth","otherProps","_react","_RenderHTMLDebug","_TRenderEngineProvider","_RenderHTMLConfigProvider","React","createElement","RenderHTMLSource"],"sources":["RenderHTML.tsx"],"sourcesContent":["import React, { ReactElement } from 'react';\nimport { RenderHTMLProps } from './shared-types';\nimport RenderHTMLDebug from './RenderHTMLDebug';\nimport TRenderEngineProvider from './TRenderEngineProvider';\nimport RenderHTMLConfigProvider from './RenderHTMLConfigProvider';\nimport RenderHTMLSource from './RenderHTMLSource';\n\n/**\n * Render HTML text in native views!\n *\n * @remarks If your application uses many instances of this component, you\n * should share the render engine across those instances via the\n * {@link TRenderEngineProvider} and {@link RenderHTMLConfigProvider}\n * components, and render the HTML with {@link RenderHTMLSource} instead. That\n * should significantly increase performance.\n *\n * @warning It should never be a child of a React Native `Text` element, as the\n * layout will break.\n *\n * @public\n */\nexport default function RenderHTML(props: RenderHTMLProps): ReactElement {\n  const {\n    source,\n    onHTMLLoaded,\n    onTTreeChange,\n    onDocumentMetadataLoaded,\n    contentWidth,\n    ...otherProps\n  } = props;\n  return (\n    <RenderHTMLDebug {...props}>\n      <TRenderEngineProvider {...otherProps}>\n        <RenderHTMLConfigProvider {...otherProps}>\n          {React.createElement(RenderHTMLSource, {\n            source,\n            onHTMLLoaded,\n            onTTreeChange,\n            onDocumentMetadataLoaded,\n            contentWidth\n          })}\n        </RenderHTMLConfigProvider>\n      </TRenderEngineProvider>\n    </RenderHTMLDebug>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}