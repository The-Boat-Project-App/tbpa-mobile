{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { CustomAvatar } from \"../CustomAvatar/CustomAvatar\";\nimport { useGetAllUsersQuery } from \"../../graphql/graphql\";\nimport { userDataVar } from \"../../variables/userData\";\nimport { useReactiveVar } from '@apollo/client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CrewDisplay = function CrewDisplay(_ref) {\n  var likes = _ref.likes,\n    postId = _ref.postId;\n  var _useGetAllUsersQuery = useGetAllUsersQuery(),\n    data = _useGetAllUsersQuery.data,\n    refetch = _useGetAllUsersQuery.refetch;\n  var userDataInApollo = useReactiveVar(userDataVar);\n  return _jsx(_StyledComponent, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    className: \"mb-3\",\n    component: ScrollView,\n    children: data == null ? void 0 : data.usersList.map(function (user, index) {\n      if (user.status === 'crew' && user.email !== userDataInApollo.email) {\n        return _jsx(CustomAvatar, {\n          isConnected: true,\n          avatarPicture: user.avatar,\n          userId: user.id\n        }, index);\n      }\n    })\n  });\n};\nexport default CrewDisplay;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mb-3\": {\n      \"marginBottom\": 12\n    }\n  }\n});","map":{"version":3,"names":["React","CustomAvatar","useGetAllUsersQuery","userDataVar","useReactiveVar","CrewDisplay","likes","postId","data","refetch","userDataInApollo","usersList","map","user","index","status","email","avatar","id"],"sources":["/Users/matthieu/Documents/tbpa-mobile/components/CrewDisplay/CrewDisplay.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Pressable } from 'native-base'\nimport { Text, ScrollView } from 'react-native'\nimport { CustomAvatar } from '@components/CustomAvatar/CustomAvatar'\nimport { useGetAllUsersQuery } from '../../graphql/graphql'\nimport { userDataVar } from '../../variables/userData'\nimport { useReactiveVar, gql, useQuery } from '@apollo/client'\n\nconst CrewDisplay = ({ likes, postId }) => {\n  const { data, refetch } = useGetAllUsersQuery()\n  const userDataInApollo = useReactiveVar(userDataVar)\n\n  return (\n    <ScrollView horizontal={true} showsHorizontalScrollIndicator={false} className='mb-3'>\n      {data?.usersList.map((user, index) => {\n        if (user.status === 'crew' && user.email !== userDataInApollo.email) {\n          return (\n            <CustomAvatar\n              key={index}\n              isConnected={true}\n              avatarPicture={user.avatar}\n              userId={user.id}\n            />\n          )\n        }\n      })}\n    </ScrollView>\n  )\n}\n\nexport default CrewDisplay\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAA;AAGvC,SAASC,YAAY;AACrB,SAASC,mBAAmB;AAC5B,SAASC,WAAW;AACpB,SAASC,cAAc,QAAuB,gBAAgB;AAAA;AAE9D,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAA0B;EAAA,IAApBC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;EAClC,2BAA0BL,mBAAmB,EAAE;IAAvCM,IAAI,wBAAJA,IAAI;IAAEC,OAAO,wBAAPA,OAAO;EACrB,IAAMC,gBAAgB,GAAGN,cAAc,CAACD,WAAW,CAAC;EAEpD;IACc,UAAU,EAAE,IAAK;IAAC,8BAA8B,EAAE,KAAM;IAAC,SAAS,EAAC,MAAM;IAAA;IAAA,UAClFK,IAAI,oBAAJA,IAAI,CAAEG,SAAS,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MACpC,IAAID,IAAI,CAACE,MAAM,KAAK,MAAM,IAAIF,IAAI,CAACG,KAAK,KAAKN,gBAAgB,CAACM,KAAK,EAAE;QACnE,OACE,KAAC,YAAY;UAEX,WAAW,EAAE,IAAK;UAClB,aAAa,EAAEH,IAAI,CAACI,MAAO;UAC3B,MAAM,EAAEJ,IAAI,CAACK;QAAG,GAHXJ,KAAK,CAIV;MAEN;IACF,CAAC;EAAC;AAGR,CAAC;AAED,eAAeT,WAAW;AAAA;EAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}