{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React, { useState, useCallback } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScreenHeader from \"../../components/ScreenHeader/ScreenHeader\";\nimport { useGetAllNewsQuery } from \"../../graphql/graphql\";\nimport NewsCardHorizontal from \"../../components/NewsCardHorizontal/NewsCardHorizontal\";\nimport moment from 'moment';\nimport LoadingView from \"../../components/LoadingView/LoadingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AllNewsScreen = function AllNewsScreen(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var _useGetAllNewsQuery = useGetAllNewsQuery(),\n    newsData = _useGetAllNewsQuery.data,\n    refetchNewsData = _useGetAllNewsQuery.refetch;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      refetchNewsData(), setRefreshing(false);\n    });\n  }, []);\n  if (!newsData) {\n    return _jsx(LoadingView, {});\n  }\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(ScreenHeader, {}), _jsx(_StyledComponent, {\n      className: \"flex flex-row justify-center\",\n      component: View,\n      children: _jsx(_StyledComponent, {\n        className: \"text-xl  color-deepBlue font-ralewayBold ml-3 mb-3\",\n        component: Text,\n        children: \"Actualit\\xE9s\"\n      })\n    }), _jsx(_StyledComponent, {\n      className: \"mx-3\",\n      showsVerticalScrollIndicator: false,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: \"#87BC23\",\n        colors: ['#87BC23', '#139DB8']\n      }),\n      component: ScrollView,\n      children: newsData == null ? void 0 : newsData.NewsList.map(function (newsItem, index) {\n        return _jsx(NewsCardHorizontal, {\n          date: moment().diff(newsItem.createdAt, 'days') <= 2 ? moment(newsItem.createdAt).fromNow() : moment(newsItem.createdAt).format('LL'),\n          id: newsItem.id,\n          title: newsItem.title,\n          picture: newsItem.mainPicture,\n          intro: newsItem.intro\n        }, index);\n      })\n    })]\n  });\n};\nexport default AllNewsScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mx-3\": {\n      \"marginLeft\": 12,\n      \"marginRight\": 12\n    },\n    \"ml-3\": {\n      \"marginLeft\": 12\n    },\n    \"mb-3\": {\n      \"marginBottom\": 12\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#FFFFFF\"\n    },\n    \"font-ralewayBold\": {\n      \"fontFamily\": \"Raleway_Bold\"\n    },\n    \"color-deepBlue\": {\n      \"color\": \"#272E67\"\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","ScreenHeader","useGetAllNewsQuery","NewsCardHorizontal","moment","LoadingView","AllNewsScreen","props","refreshing","setRefreshing","newsData","data","refetchNewsData","refetch","useWindowDimensions","height","width","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","NewsList","map","newsItem","index","diff","createdAt","fromNow","format","id","title","mainPicture","intro"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/AllNewsScreen/AllNewsScreen.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  ScrollView,\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Text,\n  RefreshControl,\n} from 'react-native'\nimport ScreenHeader from '@components/ScreenHeader/ScreenHeader'\nimport { useGetAllNewsQuery } from '../../graphql/graphql'\nimport NewsCardHorizontal from '@components/NewsCardHorizontal/NewsCardHorizontal'\nimport moment from 'moment'\nimport LoadingView from '@components/LoadingView/LoadingView'\n\nimport localization from 'moment/locale/fr'\ninterface AllNewsScreenProps {}\n\nconst AllNewsScreen: React.FunctionComponent<AllNewsScreenProps> = (props) => {\n  const [refreshing, setRefreshing] = useState<boolean>(false)\n  const { data: newsData, refetch: refetchNewsData } = useGetAllNewsQuery()\n\n  const { height, width } = useWindowDimensions()\n  const wait = (timeout: number) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout))\n  }\n  const onRefresh = useCallback(() => {\n    setRefreshing(true)\n\n    wait(2000).then(() => {\n      refetchNewsData(), setRefreshing(false)\n    })\n  }, [])\n  if (!newsData) {\n    return <LoadingView />\n  }\n\n  return (\n    <SafeAreaView className='flex-1 bg-white'>\n      <ScreenHeader />\n      <View className='flex flex-row justify-center'>\n        <Text className='text-xl  color-deepBlue font-ralewayBold ml-3 mb-3'>Actualit√©s</Text>\n      </View>\n      <ScrollView\n        className='mx-3'\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            tintColor='#87BC23'\n            colors={['#87BC23', '#139DB8']}\n          />\n        }\n      >\n        {newsData?.NewsList.map((newsItem, index) => {\n          return (\n            <NewsCardHorizontal\n              date={\n                moment().diff(newsItem.createdAt, 'days') <= 2\n                  ? moment(newsItem.createdAt).fromNow()\n                  : moment(newsItem.createdAt).format('LL')\n              }\n              key={index}\n              id={newsItem.id}\n              title={newsItem.title}\n              picture={newsItem.mainPicture}\n              intro={newsItem.intro}\n            />\n          )\n        })}\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nexport default AllNewsScreen\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpD,OAAOC,YAAY;AACnB,SAASC,kBAAkB;AAC3B,OAAOC,kBAAkB;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,WAAW;AAA2C;AAAA;AAK7D,IAAMC,aAA0D,GAAG,SAA7DA,aAA0D,CAAIC,KAAK,EAAK;EAC5E,gBAAoCR,QAAQ,CAAU,KAAK,CAAC;IAAA;IAArDS,UAAU;IAAEC,aAAa;EAChC,0BAAqDP,kBAAkB,EAAE;IAA3DQ,QAAQ,uBAAdC,IAAI;IAAqBC,eAAe,uBAAxBC,OAAO;EAE/B,2BAA0BC,mBAAmB,EAAE;IAAvCC,MAAM,wBAANA,MAAM;IAAEC,KAAK,wBAALA,KAAK;EACrB,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,OAAe,EAAK;IAChC,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO;MAAA,OAAKC,UAAU,CAACD,OAAO,EAAEF,OAAO,CAAC;IAAA,EAAC;EAC/D,CAAC;EACD,IAAMI,SAAS,GAAGtB,WAAW,CAAC,YAAM;IAClCS,aAAa,CAAC,IAAI,CAAC;IAEnBQ,IAAI,CAAC,IAAI,CAAC,CAACM,IAAI,CAAC,YAAM;MACpBX,eAAe,EAAE,EAAEH,aAAa,CAAC,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,CAACC,QAAQ,EAAE;IACb,OAAO,KAAC,WAAW,KAAG;EACxB;EAEA;IACgB,SAAS,EAAC,iBAAiB;IAAA;IAAA,WACvC,KAAC,YAAY,KAAG;MACV,SAAS,EAAC,8BAA8B;MAAA;MAAA;QACtC,SAAS,EAAC,oDAAoD;QAAA;QAAA;MAAA;IAAA;MAGpE,SAAS,EAAC,MAAM;MAChB,4BAA4B,EAAE,KAAM;MACpC,cAAc,EACZ,KAAC,cAAc;QACb,UAAU,EAAEF,UAAW;QACvB,SAAS,EAAEc,SAAU;QACrB,SAAS,EAAC,SAAS;QACnB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS;MAAE,EAElC;MAAA;MAAA,UAEAZ,QAAQ,oBAARA,QAAQ,CAAEc,QAAQ,CAACC,GAAG,CAAC,UAACC,QAAQ,EAAEC,KAAK,EAAK;QAC3C,OACE,KAAC,kBAAkB;UACjB,IAAI,EACFvB,MAAM,EAAE,CAACwB,IAAI,CAACF,QAAQ,CAACG,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,GAC1CzB,MAAM,CAACsB,QAAQ,CAACG,SAAS,CAAC,CAACC,OAAO,EAAE,GACpC1B,MAAM,CAACsB,QAAQ,CAACG,SAAS,CAAC,CAACE,MAAM,CAAC,IAAI,CAC3C;UAED,EAAE,EAAEL,QAAQ,CAACM,EAAG;UAChB,KAAK,EAAEN,QAAQ,CAACO,KAAM;UACtB,OAAO,EAAEP,QAAQ,CAACQ,WAAY;UAC9B,KAAK,EAAER,QAAQ,CAACS;QAAM,GAJjBR,KAAK,CAKV;MAEN,CAAC;IAAC;EAAA;AAIV,CAAC;AAED,eAAerB,aAAa;AAAA;EAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}