{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React, { useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport NewsCard from \"../../components/NewsCard/NewsCard\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport RenderHtml from 'react-native-render-html';\nimport ScreenHeader from \"../../components/ScreenHeader/ScreenHeader\";\nimport { useGetNewsByIdQuery, useGetAllNewsQuery } from \"../../graphql/graphql\";\nimport moment from 'moment';\nimport LoadingView from \"../../components/LoadingView/LoadingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewsScreen = function NewsScreen(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var navigation = useNavigation();\n  var _useGetNewsByIdQuery = useGetNewsByIdQuery({\n      variables: {\n        id: props.route.params.newsId\n      }\n    }),\n    data = _useGetNewsByIdQuery.data,\n    refetch = _useGetNewsByIdQuery.refetch;\n  var _useGetAllNewsQuery = useGetAllNewsQuery(),\n    newsData = _useGetAllNewsQuery.data,\n    refetchNewsData = _useGetAllNewsQuery.refetch;\n  var _useState3 = useState(data == null ? void 0 : data.News.likes),\n    _useState4 = _slicedToArray(_useState3, 2),\n    likes = _useState4[0],\n    setLikes = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  console.log('rerender data dans newscreen', data);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      refetch(), setRefreshing(false);\n    });\n  }, []);\n  var source = {\n    html: \"<div style=\\\"text-align:justify;\\\">\" + (data == null ? void 0 : data.News.content) + \"</div>\"\n  };\n  var tagsStyles = {\n    body: {\n      whiteSpace: 'normal',\n      color: '#494848'\n    },\n    a: {\n      color: '#87BC23'\n    }\n  };\n  if (!data || !newsData) {\n    return _jsx(LoadingView, {});\n  }\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(ScreenHeader, {}), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: \"#87BC23\",\n        colors: ['#87BC23', '#139DB8']\n      }),\n      children: [_jsxs(_StyledComponent, {\n        className: \"justify-center bg-white px-3 \",\n        component: View,\n        children: [_jsx(_StyledComponent, {\n          className: \"self-end mr-2  z-40\",\n          component: View\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate('Picture', {\n              imageUrl: data == null ? void 0 : data.News.mainPicture\n            });\n            console.log('clic detect√©');\n          },\n          children: _jsx(_StyledComponent, {\n            className: \"h-60 rounded-md \",\n            source: {\n              uri: data == null ? void 0 : data.News.mainPicture\n            },\n            component: Image\n          })\n        }), (data == null ? void 0 : data.News.title) && _jsxs(_Fragment, {\n          children: [_jsx(_StyledComponent, {\n            className: \"text-xl color-deepBlue font-ralewayBold  ml-3 mt-6 mb-2 text-center\",\n            component: Text,\n            children: data == null ? void 0 : data.News.title\n          }), _jsx(_StyledComponent, {\n            className: \"text-xs color-deepBlue font-raleway  mb-2 text-center \",\n            component: Text,\n            children: moment().diff(data == null ? void 0 : data.News.createdAt, 'days') <= 2 ? moment(data == null ? void 0 : data.News.createdAt).fromNow() : moment(data == null ? void 0 : data.News.createdAt).format('LL')\n          })]\n        }), (data == null ? void 0 : data.News.content) && _jsx(RenderHtml, {\n          contentWidth: width,\n          tagsStyles: tagsStyles,\n          source: source\n        })]\n      }), newsData && _jsxs(_Fragment, {\n        children: [_jsx(_StyledComponent, {\n          className: \"text-xl color-deepBlue font-ralewayBold  ml-3 mt-6 mb-2 text-left\",\n          component: Text,\n          children: \"Autres actualit\\xE9s\"\n        }), _jsx(FlatList, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          data: newsData.NewsList,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n              index = _ref.index;\n            return item.id !== props.route.params.newsId && _jsx(NewsCard, {\n              title: item.title,\n              id: item.id,\n              intro: item.intro,\n              picture: item.mainPicture,\n              content: item.content,\n              date: moment().diff(item.createdAt, 'days') <= 2 ? moment(item.createdAt).fromNow() : moment(item.createdAt).format('LL')\n            }, index);\n          }\n        })]\n      })]\n    })]\n  });\n};\nexport default NewsScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"z-40\": {\n      \"zIndex\": 40\n    },\n    \"mr-2\": {\n      \"marginRight\": 8\n    },\n    \"ml-3\": {\n      \"marginLeft\": 12\n    },\n    \"mt-6\": {\n      \"marginTop\": 24\n    },\n    \"mb-2\": {\n      \"marginBottom\": 8\n    },\n    \"h-60\": {\n      \"height\": 240\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"self-end\": {\n      \"alignSelf\": \"flex-end\"\n    },\n    \"rounded-md\": {\n      \"borderTopLeftRadius\": 6,\n      \"borderTopRightRadius\": 6,\n      \"borderBottomRightRadius\": 6,\n      \"borderBottomLeftRadius\": 6\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#FFFFFF\"\n    },\n    \"px-3\": {\n      \"paddingLeft\": 12,\n      \"paddingRight\": 12\n    },\n    \"text-left\": {\n      \"textAlign\": \"left\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-ralewayBold\": {\n      \"fontFamily\": \"Raleway_Bold\"\n    },\n    \"font-raleway\": {\n      \"fontFamily\": \"Raleway_400Regular\"\n    },\n    \"color-deepBlue\": {\n      \"color\": \"#272E67\"\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    },\n    \"text-xs\": {\n      \"fontSize\": 12,\n      \"lineHeight\": 16\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","useNavigation","NewsCard","SafeAreaView","RenderHtml","ScreenHeader","useGetNewsByIdQuery","useGetAllNewsQuery","moment","LoadingView","NewsScreen","props","open","setOpen","navigation","variables","id","route","params","newsId","data","refetch","newsData","refetchNewsData","News","likes","setLikes","refreshing","setRefreshing","useWindowDimensions","height","width","wait","timeout","Promise","resolve","setTimeout","console","log","onRefresh","then","source","html","content","tagsStyles","body","whiteSpace","color","a","navigate","imageUrl","mainPicture","uri","title","diff","createdAt","fromNow","format","item","NewsList","index","intro"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/NewsScreen/NewsScreen.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport {\n  View,\n  Text,\n  Image,\n  FlatList,\n  useWindowDimensions,\n  ScrollView,\n  RefreshControl,\n  TouchableOpacity,\n} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\n\nimport NewsCard from '@components/NewsCard/NewsCard'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport RenderHtml from 'react-native-render-html'\nimport ScreenHeader from '@components/ScreenHeader/ScreenHeader'\nimport Toggle from '@components/Toggle/Toggle'\nimport { useGetNewsByIdQuery, useGetAllNewsQuery } from '../../graphql/graphql'\nimport moment from 'moment'\nimport localization from 'moment/locale/fr'\nimport LoadingView from '@components/LoadingView/LoadingView'\nimport { Modal } from 'native-base'\n\ninterface NewsScreenProps {}\n\nconst NewsScreen: React.FunctionComponent<NewsScreenProps> = (props) => {\n  const [open, setOpen] = useState<boolean>(false)\n  const navigation = useNavigation()\n\n  const { data, refetch } = useGetNewsByIdQuery({\n    variables: { id: props.route.params.newsId },\n  })\n  const { data: newsData, refetch: refetchNewsData } = useGetAllNewsQuery()\n\n  const [likes, setLikes] = useState<number>(data?.News.likes)\n  const [refreshing, setRefreshing] = useState<boolean>(false)\n\n  const { height, width } = useWindowDimensions()\n  const wait = (timeout) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout))\n  }\n  console.log('rerender data dans newscreen', data)\n  const onRefresh = useCallback(() => {\n    setRefreshing(true)\n\n    wait(2000).then(() => {\n      refetch(), setRefreshing(false)\n    })\n  }, [])\n\n  const source = {\n    html: `<div style=\"text-align:justify;\">${data?.News.content}</div>`,\n  }\n  // Modification du style du rendu HTML\n  const tagsStyles = {\n    body: {\n      whiteSpace: 'normal',\n      color: '#494848',\n    },\n    a: {\n      color: '#87BC23',\n    },\n  }\n\n  if (!data || !newsData) {\n    return <LoadingView />\n  }\n  return (\n    <SafeAreaView className='flex-1 bg-white'>\n      <ScreenHeader />\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            tintColor='#87BC23'\n            colors={['#87BC23', '#139DB8']}\n          />\n        }\n      >\n        <View className='justify-center bg-white px-3 '>\n          <View className='self-end mr-2  z-40'></View>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate('Picture', { imageUrl: data?.News.mainPicture })\n              console.log('clic detect√©')\n            }}\n          >\n            <Image\n              className='h-60 rounded-md '\n              source={{\n                uri: data?.News.mainPicture,\n              }}\n            />\n          </TouchableOpacity>\n          {data?.News.title && (\n            <>\n              <Text className='text-xl color-deepBlue font-ralewayBold  ml-3 mt-6 mb-2 text-center'>\n                {data?.News.title}\n              </Text>\n              <Text className='text-xs color-deepBlue font-raleway  mb-2 text-center '>\n                {moment().diff(data?.News.createdAt, 'days') <= 2\n                  ? moment(data?.News.createdAt).fromNow()\n                  : moment(data?.News.createdAt).format('LL')}\n              </Text>\n            </>\n          )}\n\n          {data?.News.content && (\n            <RenderHtml contentWidth={width} tagsStyles={tagsStyles} source={source} />\n          )}\n        </View>\n        {newsData && (\n          <>\n            <Text className='text-xl color-deepBlue font-ralewayBold  ml-3 mt-6 mb-2 text-left'>\n              Autres actualit√©s\n            </Text>\n            <FlatList\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n              keyExtractor={(item) => item.id}\n              data={newsData.NewsList}\n              renderItem={({ item, index }) =>\n                item.id !== props.route.params.newsId && (\n                  <NewsCard\n                    key={index}\n                    title={item.title}\n                    id={item.id}\n                    intro={item.intro}\n                    picture={item.mainPicture}\n                    content={item.content}\n                    date={\n                      moment().diff(item.createdAt, 'days') <= 2\n                        ? moment(item.createdAt).fromNow()\n                        : moment(item.createdAt).format('LL')\n                    }\n                  />\n                )\n              }\n            />\n          </>\n        )}\n      </ScrollView>\n      {/* <Modal\n        style={{ justifyContent: 'center', alignItems: 'center', margin: 0, padding: 0 }}\n        isOpen={open}\n        onClose={() => setOpen(false)}\n        safeAreaTop={true}\n      >\n        <Modal.Content maxWidth='300'>\n          <Modal.CloseButton />\n          <Modal.Header>{data?.News.title}</Modal.Header>\n          <Modal.Body>\n            <View style={{ objectFit: 'contain',width: width, height: height }}>\n              <Image\n                style={{  resizeMode: 'cover', width: 300, height: 350 }}\n                source={{\n                  uri: data?.News.mainPicture,\n                }}\n              />\n            </View>\n          </Modal.Body>\n        </Modal.Content>\n      </Modal> */}\n    </SafeAreaView>\n  )\n}\n\nexport default NewsScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}