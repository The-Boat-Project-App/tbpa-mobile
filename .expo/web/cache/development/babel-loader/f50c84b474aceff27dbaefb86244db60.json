{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Input, KeyboardAvoidingView, IconButton } from 'native-base';\nimport { FontAwesome } from '@expo/vector-icons';\nimport MessageCard from \"../../components/MessageCard/MessageCard\";\nimport { useCreateMessagesMutation, useGetAllMessagesQuery, useOnMessageAddedSubscription } from \"../../graphql/graphql\";\nimport LoadingView from \"../../components/LoadingView/LoadingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MessagesScreen = function MessagesScreen(props) {\n  var inputRef = useRef();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useCreateMessagesMut = useCreateMessagesMutation(),\n    _useCreateMessagesMut2 = _slicedToArray(_useCreateMessagesMut, 1),\n    sendMessage = _useCreateMessagesMut2[0];\n  var _useGetAllMessagesQue = useGetAllMessagesQuery(),\n    messagesData = _useGetAllMessagesQue.data,\n    refetchMessagesData = _useGetAllMessagesQue.refetch;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chat = _useState4[0],\n    setChat = _useState4[1];\n  var _useOnMessageAddedSub = useOnMessageAddedSubscription(),\n    newMessageData = _useOnMessageAddedSub.data,\n    loading = _useOnMessageAddedSub.loading;\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  useEffect(function () {\n    if (messagesData != null && messagesData.MessagesList) {\n      if (chat.length && newMessageData) {\n        var existingMessages = _toConsumableArray(chat);\n        var newMessage = _objectSpread({}, newMessageData.messageSent);\n        var finalArray = [].concat(_toConsumableArray(existingMessages), [newMessage]);\n        setChat(finalArray);\n      } else {\n        var messagesOnLoad = _toConsumableArray(messagesData == null ? void 0 : messagesData.MessagesList);\n        setChat(messagesOnLoad);\n      }\n    }\n  }, [messagesData, newMessageData]);\n  console.log('newMessageData', newMessageData, 'loading', loading);\n  var saveMessage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (message && message !== '') {\n        var response = yield sendMessage({\n          variables: {\n            newMessagesInput: {\n              content: message,\n              mainPicture: 'httpppp',\n              author: ''\n            }\n          }\n        });\n        setMessage('');\n      }\n    });\n    return function saveMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n\n      refetchMessagesData(), setRefreshing(false);\n    });\n  }, []);\n\n  if (!messagesData) {\n    return _jsx(LoadingView, {});\n  }\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(_StyledComponent, {\n      className: \"mb-3 mx-3\",\n      horizontal: false,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      data: chat,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: \"#87BC23\",\n        colors: ['#87BC23', '#139DB8']\n      }),\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(MessageCard, {\n          content: item.content,\n          author: item.author\n        }, index);\n      },\n      component: FlatList\n    }), _jsxs(_StyledComponent, {\n      className: \"mx-3 flex flex-row justify-between\",\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      component: KeyboardAvoidingView,\n      children: [_jsx(Input, {\n        placeholder: \"Input\",\n        w: \"82%\",\n        onChangeText: function onChangeText(msg) {\n          return setMessage(msg);\n        },\n        ref: inputRef\n      }), _jsx(IconButton, {\n        w: \"15%\",\n        size: \"sm\",\n        variant: \"solid\",\n        _icon: {\n          as: FontAwesome,\n          name: 'send'\n        },\n        onPress: function onPress() {\n          return saveMessage();\n        }\n      })]\n    })]\n  });\n};\nexport default MessagesScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mx-3\": {\n      \"marginLeft\": 12,\n      \"marginRight\": 12\n    },\n    \"mb-3\": {\n      \"marginBottom\": 12\n    },\n    \"mb-4\": {\n      \"marginBottom\": 16\n    },\n    \"mt-2\": {\n      \"marginTop\": 8\n    },\n    \"mb-8\": {\n      \"marginBottom\": 32\n    },\n    \"mb-2\": {\n      \"marginBottom\": 8\n    },\n    \"mb-6\": {\n      \"marginBottom\": 24\n    },\n    \"ml-1\": {\n      \"marginLeft\": 4\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"h-40\": {\n      \"height\": 160\n    },\n    \"w-1/2\": {\n      \"width\": \"50%\"\n    },\n    \"w-40\": {\n      \"width\": 160\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"justify-between\": {\n      \"justifyContent\": \"space-between\"\n    },\n    \"rounded-full\": {\n      \"borderTopLeftRadius\": 9999,\n      \"borderTopRightRadius\": 9999,\n      \"borderBottomRightRadius\": 9999,\n      \"borderBottomLeftRadius\": 9999\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#FFFFFF\"\n    },\n    \"px-4\": {\n      \"paddingLeft\": 16,\n      \"paddingRight\": 16\n    },\n    \"font-ralewayBold\": {\n      \"fontFamily\": \"Raleway_Bold\"\n    },\n    \"font-raleway\": {\n      \"fontFamily\": \"Raleway_400Regular\"\n    },\n    \"color-deepBlue\": {\n      \"color\": \"#272E67\"\n    },\n    \"color-grey\": {\n      \"color\": \"#494848\"\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    },\n    \"text-sm\": {\n      \"fontSize\": 14,\n      \"lineHeight\": 20\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","SafeAreaView","Input","KeyboardAvoidingView","IconButton","FontAwesome","MessageCard","useCreateMessagesMutation","useGetAllMessagesQuery","useOnMessageAddedSubscription","LoadingView","MessagesScreen","props","inputRef","message","setMessage","sendMessage","messagesData","data","refetchMessagesData","refetch","chat","setChat","newMessageData","loading","refreshing","setRefreshing","MessagesList","length","existingMessages","newMessage","messageSent","finalArray","messagesOnLoad","console","log","saveMessage","response","variables","newMessagesInput","content","mainPicture","author","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","item","id","index","Platform","OS","msg","as","name"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/MessagesScreen/MessagesScreen.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport {\n  View,\n  Text,\n  Image,\n  useWindowDimensions,\n  Platform,\n  ScrollView,\n  RefreshControl,\n  FlatList,\n} from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { Input, KeyboardAvoidingView, IconButton, Icon } from 'native-base'\nimport ScreenHeader from '@components/ScreenHeader/ScreenHeader'\nimport { Ionicons, FontAwesome } from '@expo/vector-icons'\nimport { gql, useQuery, useSubscription } from '@apollo/client'\n\nimport MessageCard from '@components/MessageCard/MessageCard'\nimport {\n  useCreateMessagesMutation,\n  useGetAllMessagesQuery,\n  useOnMessageAddedSubscription,\n} from '../../graphql/graphql'\n\nimport moment from 'moment'\nimport localization from 'moment/locale/fr'\nimport LoadingView from '@components/LoadingView/LoadingView'\n\nimport { HomeModernIcon, ChatBubbleLeftIcon } from 'react-native-heroicons/outline'\n\ninterface MessagesScreenProps {}\n\nconst MessagesScreen: React.FunctionComponent<MessagesScreenProps> = (props) => {\n  // const MESSAGES_SUBSCRIPTION = gql`\n  //   subscription messageSent {\n  //     messageSent {\n  //       id\n  //       content\n  //       mainPicture\n  //       author {\n  //         firstName\n  //       }\n  //     }\n  //   }\n  // `\n  const inputRef = useRef()\n  const [message, setMessage] = useState<string>('')\n\n  const [sendMessage] = useCreateMessagesMutation()\n  const { data: messagesData, refetch: refetchMessagesData } = useGetAllMessagesQuery()\n  const [chat, setChat] = useState([])\n  // const { data, loading } = useSubscription(MESSAGES_SUBSCRIPTION)\n  const { data: newMessageData, loading } = useOnMessageAddedSubscription()\n  const [refreshing, setRefreshing] = useState<boolean>(false)\n  // console.log(newMessageData)\n  useEffect(() => {\n    if (messagesData?.MessagesList) {\n      if (chat.length && newMessageData) {\n        const existingMessages = [...chat]\n        const newMessage = { ...newMessageData.messageSent }\n        const finalArray = [...existingMessages, newMessage]\n        setChat(finalArray)\n      } else {\n        const messagesOnLoad = [...messagesData?.MessagesList]\n        setChat(messagesOnLoad)\n      }\n    }\n  }, [messagesData, newMessageData])\n  console.log('newMessageData', newMessageData, 'loading', loading)\n  // console.log('data from sub', data)\n  const saveMessage = async () => {\n    if (message && message !== '') {\n      const response = await sendMessage({\n        variables: {\n          newMessagesInput: {\n            content: message,\n            mainPicture: 'httpppp',\n            author: '',\n          },\n        },\n      })\n      setMessage('')\n    }\n  }\n  // console.log('liste de mess', messagesData)\n  const wait = (timeout) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout))\n  }\n  const onRefresh = useCallback(() => {\n    setRefreshing(true)\n\n    wait(2000).then(() => {\n      // console.log('liste de mess', messagesData)\n\n      refetchMessagesData(), setRefreshing(false)\n    })\n  }, [])\n\n  // if (!messagesData) {\n  //   return <LoadingView />\n  // }\n\n  // console.log('data dans partnerScreen', partnersData)\n\n  // const [refreshing, setRefreshing] = useState<boolean>(false)\n\n  // const { height, width } = useWindowDimensions()\n  // const wait = (timeout) => {\n  //   return new Promise((resolve) => setTimeout(resolve, timeout))\n  // }\n  // console.log('rerender data dans partnerscreen', partnersData)\n  // const onRefresh = useCallback(() => {\n  //   setRefreshing(true)\n  //   console.log('data dans onrefresh sur partnerScreen', partnersData)\n\n  //   wait(2000).then(() => {\n  //     refetchPartnersData(), setRefreshing(false)\n  //   })\n  // }, [])\n  if (!messagesData) {\n    return <LoadingView />\n  }\n\n  return (\n    <SafeAreaView className='flex-1 bg-white'>\n      <FlatList\n        className='mb-3 mx-3'\n        horizontal={false}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(item) => item.id}\n        data={chat}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            tintColor='#87BC23'\n            colors={['#87BC23', '#139DB8']}\n          />\n        }\n        renderItem={({ item, index }) => (\n          <MessageCard key={index} content={item.content} author={item.author} />\n        )}\n      />\n\n      {/* <View className=' bg-white flex flex-row mb-4 mt-2 justify-center'>\n          {data?.user.firstName && (\n            <View className='w-1/2 justify-center '>\n              <Text className='text-xl color-deepBlue font-ralewayBold '>\n                👋 Bonjour !{'\\n'}Je m'appelle{'\\n'}\n                {data?.user.firstName}\n              </Text>\n              <Text className='text-sm color-grey font-raleway mb-8'>\n                Membre depuis {moment(data?.user.createdAt).format('MMMM YYYY')}\n              </Text>\n            </View>\n          )}\n\n          <Image\n            className='rounded-full w-40 h-40'\n            source={{\n              uri: data?.user.avatar,\n            }}\n          />\n        </View>\n        <View className='px-4'> */}\n      {/* <View className='flex-row justify-center'>\n            <Toggle isEnabled={false} />\n          </View>\n          <Text className='text-xl color-deepBlue font-ralewayBold mb-2'>À propos</Text>\n          <Text className='text-sm color-grey font-raleway mb-6'>{data?.user.bio}</Text>\n          <View className='flex flex-row items-center mb-6'>\n            <ChatBubbleLeftIcon size={24} color='#272E67' />\n            <Text className='text-sm color-grey font-raleway ml-1'>\n              Langues :{' '}\n              {data?.user.lang.map((language, index) => {\n                let formattedLanguage = ''\n                if (language === 'FR') {\n                  formattedLanguage = 'Français'\n                }\n                if (language === 'EN') {\n                  formattedLanguage = 'English'\n                }\n                if (language === 'SP') {\n                  formattedLanguage = 'Español'\n                }\n                if (language === 'AR') {\n                  formattedLanguage = 'عربى'\n                }\n\n                if (language === 'IT') {\n                  formattedLanguage = 'Italiano'\n                }\n\n                if (index == data?.user.lang.length - 1) {\n                  return `${formattedLanguage}`\n                }\n\n                return `${formattedLanguage} | `\n              })}\n            </Text>\n          </View>\n          <View className='flex flex-row items-center mb-6'>\n            <HomeModernIcon size={24} color='#272E67' />\n            <Text className='text-sm color-grey font-raleway ml-1'>\n              Vient de : {`${data?.user.city}, ${data?.user.country}`}\n            </Text>\n          </View>\n          {userPostsData?.PostsByUserList.length > 0 ? (\n            <Text className='text-xl color-deepBlue font-ralewayBold mb-3 mt-2'>\n              Mes publications\n            </Text>\n          ) : (\n            <Text className='text-xl color-deepBlue font-ralewayBold mb-3'>\n              {data?.user.firstName} n'a encore rien publié.\n            </Text>\n          )}\n          {userPostsData?.PostsByUserList.map((postItem, index) => {\n            return (\n              <PostCard\n                key={index}\n                id={postItem.id}\n                title={postItem.title}\n                picture={postItem.mainPicture}\n                likes={postItem.likes}\n                comments={postItem.comments}\n                intro={postItem.intro}\n              />\n            )\n          })}\n        </View> */}\n      <KeyboardAvoidingView\n        className='mx-3 flex flex-row justify-between'\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      >\n        <Input placeholder='Input' w='82%' onChangeText={(msg) => setMessage(msg)} ref={inputRef} />\n        <IconButton\n          w='15%'\n          size='sm'\n          variant='solid'\n          _icon={{\n            as: FontAwesome,\n            name: 'send',\n          }}\n          onPress={() => saveMessage()}\n        />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  )\n}\n\nexport default MessagesScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}