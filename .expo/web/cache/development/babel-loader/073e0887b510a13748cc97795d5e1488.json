{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport ScreenHeader from \"../../components/ScreenHeader/ScreenHeader\";\nimport ImageViewer from 'react-native-image-zoom-viewer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PictureScreen = function PictureScreen(props) {\n  console.log('url dans picturescreen', props.route.params.imageUrl);\n  var images = [{\n    url: props.route.params.imageUrl,\n\n    props: {\n    }\n  }];\n\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(ScreenHeader, {}), _jsx(ImageViewer, {\n      imageUrls: images,\n      backgroundColor: \"white\"\n    })]\n  });\n};\nexport default PictureScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#FFFFFF\"\n    }\n  }\n});","map":{"version":3,"names":["React","SafeAreaView","ScreenHeader","ImageViewer","PictureScreen","props","console","log","route","params","imageUrl","images","url"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/PictureScreen/PictureScreen.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { View, Text, Image, useWindowDimensions, ScrollView, RefreshControl } from 'react-native'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport ScreenHeader from '@components/ScreenHeader/ScreenHeader'\nimport ImageViewer from 'react-native-image-zoom-viewer'\n\ninterface PictureScreenProps {}\n\nconst PictureScreen: React.FunctionComponent<PictureScreenProps> = (props) => {\n  console.log('url dans picturescreen', props.route.params.imageUrl)\n\n  const images = [\n    {\n      // Simplest usage.\n      url: props.route.params.imageUrl,\n\n      // width: number\n      // height: number\n      // Optional, if you know the image size, you can set the optimization performance\n\n      // You can pass props to <Image />.\n      props: {\n        // headers: ...\n      },\n    },\n  ]\n  return (\n    <SafeAreaView className='flex-1 bg-white'>\n      <ScreenHeader />\n      <ImageViewer imageUrls={images} backgroundColor='white' />\n\n      {/* <View style={{ flex: 1, height: '100%', width: '100%' }}>\n        <Image\n          style={{ flex: 1, resizeMode: 'contain' }}\n          source={{\n            uri: props.route.params.imageUrl,\n          }}\n        />\n      </View> */}\n    </SafeAreaView>\n  )\n}\n\nexport default PictureScreen\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAiC,OAAO;AAEpD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAOC,YAAY;AACnB,OAAOC,WAAW,MAAM,gCAAgC;AAAA;AAAA;AAIxD,IAAMC,aAA0D,GAAG,SAA7DA,aAA0D,CAAIC,KAAK,EAAK;EAC5EC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ,CAAC;EAElE,IAAMC,MAAM,GAAG,CACb;IAEEC,GAAG,EAAEP,KAAK,CAACG,KAAK,CAACC,MAAM,CAACC,QAAQ;;IAOhCL,KAAK,EAAE;IAEP;EACF,CAAC,CACF;;EACD;IACgB,SAAS,EAAC,iBAAiB;IAAA;IAAA,WACvC,KAAC,YAAY,KAAG,EAChB,KAAC,WAAW;MAAC,SAAS,EAAEM,MAAO;MAAC,eAAe,EAAC;IAAO,EAAG;EAAA;AAYhE,CAAC;AAED,eAAeP,aAAa;AAAA;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}