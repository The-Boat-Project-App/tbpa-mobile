{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CustomAvatar = function CustomAvatar(_ref) {\n  var avatarPicture = _ref.avatarPicture,\n    isConnected = _ref.isConnected,\n    userId = _ref.userId,\n    _ref$noLink = _ref.noLink,\n    noLink = _ref$noLink === void 0 ? false : _ref$noLink;\n  var navigation = useNavigation();\n  return _jsxs(_StyledComponent, {\n    className: \"w-20 h-20 items-center justify-center\",\n    onPress: function onPress() {\n      !noLink && navigation.navigate('User', {\n        userId: userId\n      });\n    },\n    component: TouchableOpacity,\n    children: [_jsx(_StyledComponent, {\n      source: {\n        uri: avatarPicture\n      },\n      className: \"w-16 h-16 rounded-full border-2 \" + (isConnected ? 'border-white' : 'border-white'),\n      component: Image\n    }), isConnected && _jsx(_StyledComponent, {\n      className: \"top-1 left-12 absolute  w-4 h-4 border-2  bg-green border-white dark:border-gray-800 rounded-full\",\n      component: View\n    })]\n  });\n};\nexport default CustomAvatar;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"absolute\": {\n      \"position\": \"absolute\"\n    },\n    \"top-1\": {\n      \"top\": 4\n    },\n    \"left-12\": {\n      \"left\": 48\n    },\n    \"h-20\": {\n      \"height\": 80\n    },\n    \"h-16\": {\n      \"height\": 64\n    },\n    \"h-4\": {\n      \"height\": 16\n    },\n    \"w-20\": {\n      \"width\": 80\n    },\n    \"w-16\": {\n      \"width\": 64\n    },\n    \"w-4\": {\n      \"width\": 16\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"rounded-full\": {\n      \"borderTopLeftRadius\": 9999,\n      \"borderTopRightRadius\": 9999,\n      \"borderBottomRightRadius\": 9999,\n      \"borderBottomLeftRadius\": 9999\n    },\n    \"border-2\": {\n      \"borderTopWidth\": 2,\n      \"borderRightWidth\": 2,\n      \"borderBottomWidth\": 2,\n      \"borderLeftWidth\": 2\n    },\n    \"border-white\": {\n      \"borderTopColor\": \"#FFFFFF\",\n      \"borderRightColor\": \"#FFFFFF\",\n      \"borderBottomColor\": \"#FFFFFF\",\n      \"borderLeftColor\": \"#FFFFFF\"\n    },\n    \"bg-green\": {\n      \"backgroundColor\": \"#87BC23\"\n    }\n  }\n});","map":{"version":3,"names":["useNavigation","CustomAvatar","avatarPicture","isConnected","userId","noLink","navigation","navigate","uri"],"sources":["/Users/matthieu/Documents/tbpa-mobile/components/CustomAvatar/CustomAvatar.tsx"],"sourcesContent":["import { View, Image, TouchableOpacity } from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\n\ninterface CustomAvatar {\n  avatarPicture: string\n  isConnected: boolean\n  userId: string\n  noLink: boolean\n}\n\nexport const CustomAvatar: React.FunctionComponent<CustomAvatarProps> = ({\n  avatarPicture,\n  isConnected,\n  userId,\n  noLink = false,\n}) => {\n  const navigation = useNavigation()\n\n  return (\n    <TouchableOpacity\n      className='w-20 h-20 items-center justify-center'\n      onPress={() => {\n        !noLink && navigation.navigate('User', { userId: userId })\n      }}\n    >\n      <Image\n        source={{\n          uri: avatarPicture,\n        }}\n        className={`w-16 h-16 rounded-full border-2 ${\n          isConnected ? 'border-white' : 'border-white'\n        }`}\n      />\n      {isConnected && (\n        <View\n          className='top-1 left-12 absolute  w-4 h-4 border-2 \n           bg-green\n         border-white dark:border-gray-800 rounded-full'\n        ></View>\n      )}\n    </TouchableOpacity>\n  )\n}\n\nexport default CustomAvatar\n"],"mappings":";;;;;AACA,SAASA,aAAa,QAAQ,0BAA0B;AAAA;AAAA;AASxD,OAAO,IAAMC,YAAwD,GAAG,SAA3DA,YAAwD,OAK/D;EAAA,IAJJC,aAAa,QAAbA,aAAa;IACbC,WAAW,QAAXA,WAAW;IACXC,MAAM,QAANA,MAAM;IAAA,mBACNC,MAAM;IAANA,MAAM,4BAAG,KAAK;EAEd,IAAMC,UAAU,GAAGN,aAAa,EAAE;EAElC;IAEI,SAAS,EAAC,uCAAuC;IACjD,OAAO,EAAE,mBAAM;MACb,CAACK,MAAM,IAAIC,UAAU,CAACC,QAAQ,CAAC,MAAM,EAAE;QAAEH,MAAM,EAAEA;MAAO,CAAC,CAAC;IAC5D,CAAE;IAAA;IAAA;MAGA,MAAM,EAAE;QACNI,GAAG,EAAEN;MACP,CAAE;MACF,SAAS,wCACPC,WAAW,GAAG,cAAc,GAAG,cAAc,CAC5C;MAAA;IAAA,IAEJA,WAAW;MAER,SAAS,EAAC,mGAEoC;MAAA;IAAA,EAEjD;EAAA;AAGP,CAAC;AAED,eAAeF,YAAY;AAAA;EAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}