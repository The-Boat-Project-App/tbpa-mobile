{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Button, Divider, Badge, Modal } from 'native-base';\nimport { useGetAllSubmittedPostsByUserQuery, useGetAllDraftPostsByUserQuery } from \"../../graphql/graphql\";\nimport PostCard from \"../../components/PostCard/PostCard\";\nimport LoadingView from \"../../components/LoadingView/LoadingView\";\nimport { PlusCircleIcon as PlusCircleIconOutline, InboxIcon as InboxIconOutline } from 'react-native-heroicons/outline';\nimport { useNavigation } from '@react-navigation/native';\nimport { useReactiveVar } from '@apollo/client';\nimport { userDataVar } from \"../../variables/userData\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar UserPostsScreen = function UserPostsScreen(props) {\n  var isFocused = useIsFocused();\n  var userDataInApollo = useReactiveVar(userDataVar);\n  console.log('userdateinapollo', userDataInApollo);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOpen = _useState4[0],\n    setIsOpen = _useState4[1];\n  var navigation = useNavigation();\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDraftSelected = _useState6[0],\n    setIsDraftSelected = _useState6[1];\n  var _useGetAllSubmittedPo = useGetAllSubmittedPostsByUserQuery(),\n    submittedPostsData = _useGetAllSubmittedPo.data,\n    refetchSubmittedPostsData = _useGetAllSubmittedPo.refetch;\n  var _useGetAllDraftPostsB = useGetAllDraftPostsByUserQuery(),\n    draftPostsData = _useGetAllDraftPostsB.data,\n    refetchDraftPostsData = _useGetAllDraftPostsB.refetch;\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width;\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      refetchSubmittedPostsData(), setRefreshing(false);\n    });\n  }, []);\n  console.log('🍭submittedPostsData', submittedPostsData);\n  console.log('🍭draftPostsData', draftPostsData);\n  useEffect(function () {\n    isFocused && setIsOpen(userDataInApollo.firstName ? false : true);\n  }, [userDataInApollo.email, isFocused]);\n  if (!submittedPostsData || !draftPostsData) {\n    if (userDataInApollo.email || userDataInApollo.firstName) {\n      return _jsx(LoadingView, {});\n    }\n  }\n\n  var emptyDraftDisplay = (draftPostsData == null ? void 0 : draftPostsData.AllDraftPostsByUserList.length) == 0 ? _jsxs(View, {\n    style: {\n      flex: 1,\n      minHeight: height * 0.5,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(InboxIconOutline, {\n      size: 40,\n      color: \"grey\"\n    }), _jsx(_StyledComponent, {\n      className: \"text-sm color-grey font-raleway\",\n      component: Text,\n      children: \"Vous n'avez pas de brouillons.\"\n    })]\n  }) : null;\n  var emptySumbittedDisplay = (submittedPostsData == null ? void 0 : submittedPostsData.AllSubmittedPostsByUserList.length) == 0 ? _jsxs(View, {\n    style: {\n      flex: 1,\n      minHeight: height * 0.5,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(InboxIconOutline, {\n      size: 40,\n      color: \"grey\"\n    }), _jsx(_StyledComponent, {\n      className: \"text-sm color-grey font-raleway\",\n      component: Text,\n      children: \"Vous n'avez pas encore publi\\xE9.\"\n    })]\n  }) : null;\n  return _jsxs(_StyledComponent, {\n    className: \"flex-1 bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(_StyledComponent, {\n      className: \"flex flex-row justify-center\",\n      component: View,\n      children: _jsx(_StyledComponent, {\n        className: \"text-xl  color-deepBlue font-ralewayBold ml-3 mb-5  \" + (Platform.OS === 'ios' ? 'mt-6' : 'mt-12'),\n        component: Text,\n        children: \"Vos publications\"\n      })\n    }), _jsxs(_StyledComponent, {\n      className: \"flex flex-row  mb-2 mx-3\",\n      style: {\n        borderBottomWidth: 1,\n        borderBottomColor: '#bfbfbf'\n      },\n      component: View,\n      children: [_jsx(_StyledComponent, {\n        className: \"w-1/2  flex justify-center items-center \" + (!isDraftSelected ? 'border-b-2 border-deepBlue ' : 'border-b-2 border-white') + \" \",\n        onPress: function onPress() {\n          return setIsDraftSelected(false);\n        },\n        component: TouchableOpacity,\n        children: _jsxs(_StyledComponent, {\n          className: \"text-sm  \" + (!isDraftSelected ? 'font-ralewayBold mb-1  color-deepBlue ' : 'font-raleway mb-1') + \" ml-3\",\n          component: Text,\n          children: [\"Publi\\xE9es\", (submittedPostsData == null ? void 0 : submittedPostsData.AllSubmittedPostsByUserList.length) > 0 && _jsx(Badge, {\n            colorScheme: \"success\",\n            rounded: \"full\",\n            mb: 2,\n            mr: -2,\n            zIndex: 1,\n            variant: \"subtle\",\n            alignSelf: \"flex-start\",\n            _text: {\n              fontSize: 10\n            },\n            children: submittedPostsData == null ? void 0 : submittedPostsData.AllSubmittedPostsByUserList.length\n          })]\n        })\n      }), _jsx(_StyledComponent, {\n        className: \"w-1/2 bg flex justify-center items-center \" + (isDraftSelected ? 'border-b-2 border-deepBlue ' : 'border-b-2 border-white'),\n        onPress: function onPress() {\n          return setIsDraftSelected(true);\n        },\n        component: TouchableOpacity,\n        children: _jsxs(_StyledComponent, {\n          className: \"text-sm color-deepBlue \" + (isDraftSelected ? 'font-ralewayBold' : 'font-raleway') + \" ml-3\",\n          component: Text,\n          children: [\"Brouillons\", (draftPostsData == null ? void 0 : draftPostsData.AllDraftPostsByUserList.length) > 0 && _jsx(Badge, {\n            colorScheme: \"default\",\n            rounded: \"full\",\n            mb: 2,\n            mr: -2,\n            zIndex: 1,\n            variant: \"subtle\",\n            alignSelf: \"flex-start\",\n            _text: {\n              fontSize: 10\n            },\n            children: draftPostsData == null ? void 0 : draftPostsData.AllDraftPostsByUserList.length\n          })]\n        })\n      })]\n    }), _jsxs(_StyledComponent, {\n      className: \"mx-3 mt-2 \",\n      showsVerticalScrollIndicator: false,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        tintColor: \"#87BC23\",\n        colors: ['#87BC23', '#139DB8']\n      }),\n      component: ScrollView,\n      children: [!isDraftSelected && _jsxs(_Fragment, {\n        children: [submittedPostsData == null ? void 0 : submittedPostsData.AllSubmittedPostsByUserList.map(function (postItem, index) {\n          return _jsxs(_Fragment, {\n            children: [_jsx(PostCard, {\n              id: postItem.id,\n              title: postItem.title,\n              picture: postItem.mainPicture,\n              likes: postItem.likes,\n              comments: postItem.comments,\n              intro: postItem.intro,\n              authorView: \"true\",\n              validated: postItem.validated\n            }, index), _jsx(Divider, {\n              bg: \"#dddddd\",\n              thickness: \"1\",\n              my: \"3\",\n              orientation: \"horizontal\"\n            })]\n          });\n        }), emptySumbittedDisplay]\n      }), isDraftSelected && _jsxs(_Fragment, {\n        children: [draftPostsData == null ? void 0 : draftPostsData.AllDraftPostsByUserList.map(function (postItem, index) {\n          return _jsx(PostCard, {\n            id: postItem.id,\n            title: postItem.title,\n            picture: postItem.mainPicture,\n            likes: postItem.likes,\n            comments: postItem.comments,\n            intro: postItem.intro\n          }, index);\n        }), emptyDraftDisplay]\n      })]\n    }), _jsx(_StyledComponent, {\n      className: \"flex flex-row justify-center\",\n      component: View,\n      children: _jsx(_StyledComponent, {\n        className: \"text-xl  color-deepBlue font-ralewayBold ml-3 mb-1 mt-4 text-center\",\n        component: Text,\n        children: (draftPostsData == null ? void 0 : draftPostsData.AllDraftPostsByUserList.length) == 0 && (submittedPostsData == null ? void 0 : submittedPostsData.AllSubmittedPostsByUserList.length) == 0 ? \"Proposez votre premi\\xE8re publication !\" : \"Proposer une nouvelle publication\"\n      })\n    }), _jsx(_StyledComponent, {\n      className: \"mx-6 my-4\",\n      onPress: function onPress() {\n        console.log('clic');\n        navigation.navigate('AddNewPost');\n      },\n      component: Button,\n      children: _jsx(PlusCircleIconOutline, {\n        size: 40,\n        color: \"white\"\n      })\n    }), _jsx(Modal, {\n      isOpen: isOpen,\n      safeAreaTop: true,\n      children: _jsxs(Modal.Content, {\n        maxWidth: \"350\",\n        children: [_jsx(Modal.Header, {\n          children: _jsx(_StyledComponent, {\n            className: \"text-xl  color-deepBlue font-ralewayBold ml-3 text-center\",\n            component: Text,\n            children: \"Connectez-vous pour d\\xE9couvrir toutes les fonctionnalit\\xE9s\"\n          })\n        }), _jsx(Modal.Body, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate('BottomTabs', {\n                screen: 'Profile'\n              });\n              setIsOpen(false);\n            },\n            children: _jsx(_StyledComponent, {\n              className: \"text-md  color-deepBlue font-ralewayBold ml-3 text-center\",\n              component: Text,\n              children: \"Se connecter ou s'inscrire\"\n            })\n          })\n        }), _jsx(Modal.Footer, {\n          onPress: function onPress() {\n            return navigation.navigate('Home');\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate('BottomTabs', {\n                screen: 'Home'\n              });\n              setIsOpen(false);\n            },\n            children: _jsx(_StyledComponent, {\n              className: \"text-xs  color-deepBlue font-raleway ml-3 text-center\",\n              component: Text,\n              children: \"Non merci\"\n            })\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default UserPostsScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"mx-3\": {\n      \"marginLeft\": 12,\n      \"marginRight\": 12\n    },\n    \"mx-6\": {\n      \"marginLeft\": 24,\n      \"marginRight\": 24\n    },\n    \"my-4\": {\n      \"marginTop\": 16,\n      \"marginBottom\": 16\n    },\n    \"ml-3\": {\n      \"marginLeft\": 12\n    },\n    \"mb-5\": {\n      \"marginBottom\": 20\n    },\n    \"mt-6\": {\n      \"marginTop\": 24\n    },\n    \"mt-12\": {\n      \"marginTop\": 48\n    },\n    \"mb-2\": {\n      \"marginBottom\": 8\n    },\n    \"mb-1\": {\n      \"marginBottom\": 4\n    },\n    \"mt-2\": {\n      \"marginTop\": 8\n    },\n    \"mt-4\": {\n      \"marginTop\": 16\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"w-1/2\": {\n      \"width\": \"50%\"\n    },\n    \"flex-1\": {\n      \"flexGrow\": 1,\n      \"flexShrink\": 1,\n      \"flexBasis\": \"0%\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    },\n    \"rounded\": {\n      \"borderTopLeftRadius\": 4,\n      \"borderTopRightRadius\": 4,\n      \"borderBottomRightRadius\": 4,\n      \"borderBottomLeftRadius\": 4\n    },\n    \"border-b-2\": {\n      \"borderBottomWidth\": 2\n    },\n    \"border-deepBlue\": {\n      \"borderTopColor\": \"#272E67\",\n      \"borderRightColor\": \"#272E67\",\n      \"borderBottomColor\": \"#272E67\",\n      \"borderLeftColor\": \"#272E67\"\n    },\n    \"border-white\": {\n      \"borderTopColor\": \"#FFFFFF\",\n      \"borderRightColor\": \"#FFFFFF\",\n      \"borderBottomColor\": \"#FFFFFF\",\n      \"borderLeftColor\": \"#FFFFFF\"\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#FFFFFF\"\n    },\n    \"text-center\": {\n      \"textAlign\": \"center\"\n    },\n    \"font-raleway\": {\n      \"fontFamily\": \"Raleway_400Regular\"\n    },\n    \"font-ralewayBold\": {\n      \"fontFamily\": \"Raleway_Bold\"\n    },\n    \"color-grey\": {\n      \"color\": \"#494848\"\n    },\n    \"color-deepBlue\": {\n      \"color\": \"#272E67\"\n    },\n    \"text-sm\": {\n      \"fontSize\": 14,\n      \"lineHeight\": 20\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    },\n    \"text-xs\": {\n      \"fontSize\": 12,\n      \"lineHeight\": 16\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useCallback","useEffect","Button","Divider","Badge","Modal","useGetAllSubmittedPostsByUserQuery","useGetAllDraftPostsByUserQuery","PostCard","LoadingView","PlusCircleIcon","PlusCircleIconOutline","InboxIcon","InboxIconOutline","useNavigation","useReactiveVar","userDataVar","useIsFocused","UserPostsScreen","props","isFocused","userDataInApollo","console","log","refreshing","setRefreshing","isOpen","setIsOpen","navigation","isDraftSelected","setIsDraftSelected","submittedPostsData","data","refetchSubmittedPostsData","refetch","draftPostsData","refetchDraftPostsData","useWindowDimensions","height","width","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","firstName","email","emptyDraftDisplay","AllDraftPostsByUserList","length","flex","minHeight","justifyContent","alignItems","emptySumbittedDisplay","AllSubmittedPostsByUserList","Platform","OS","borderBottomWidth","borderBottomColor","fontSize","map","postItem","index","id","title","mainPicture","likes","comments","intro","validated","navigate","screen"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/UserPostsScreen/UserPostsScreen.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  ScrollView,\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Text,\n  TouchableOpacity,\n  RefreshControl,\n  Platform,\n  SnapshotViewIOSComponent,\n} from 'react-native'\nimport { Button, Divider, Badge, Modal } from 'native-base'\nimport ScreenHeader from '@components/ScreenHeader/ScreenHeader'\nimport {\n  useGetAllSubmittedPostsByUserQuery,\n  useGetAllDraftPostsByUserQuery,\n} from '../../graphql/graphql'\nimport PostCard from '@components/PostCard/PostCard'\nimport LoadingView from '@components/LoadingView/LoadingView'\nimport {\n  PlusCircleIcon as PlusCircleIconOutline,\n  InboxIcon as InboxIconOutline,\n} from 'react-native-heroicons/outline'\nimport { useNavigation } from '@react-navigation/native'\nimport { useReactiveVar } from '@apollo/client'\nimport { userDataVar } from '../../variables/userData'\nimport { useIsFocused } from '@react-navigation/native'\n\ninterface UserPostsScreenProps {}\n\nconst UserPostsScreen: React.FunctionComponent<UserPostsScreenProps> = (props) => {\n  //Check if user is connected => if not, display modal\n  const isFocused = useIsFocused()\n\n  const userDataInApollo = useReactiveVar(userDataVar)\n  console.log('userdateinapollo', userDataInApollo)\n  const [refreshing, setRefreshing] = useState<boolean>(false)\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const navigation = useNavigation()\n  const [isDraftSelected, setIsDraftSelected] = useState<boolean>(false)\n  const { data: submittedPostsData, refetch: refetchSubmittedPostsData } =\n    useGetAllSubmittedPostsByUserQuery()\n  const { data: draftPostsData, refetch: refetchDraftPostsData } = useGetAllDraftPostsByUserQuery()\n  const { height, width } = useWindowDimensions()\n  const wait = (timeout: number) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout))\n  }\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true)\n    wait(2000).then(() => {\n      refetchSubmittedPostsData(), setRefreshing(false)\n    })\n  }, [])\n  console.log('🍭submittedPostsData', submittedPostsData)\n  console.log('🍭draftPostsData', draftPostsData)\n\n  useEffect(() => {\n    isFocused && setIsOpen(userDataInApollo.firstName ? false : true)\n  }, [userDataInApollo.email, isFocused])\n\n  if (!submittedPostsData || !draftPostsData) {\n    if (userDataInApollo.email || userDataInApollo.firstName) {\n      return <LoadingView />\n    }\n  }\n\n  // let isConnected\n  // if (userDataInApollo.email !== '' || !userDataInApollo.email) {\n  //   isConnected = false\n  // }\n  const emptyDraftDisplay =\n    draftPostsData?.AllDraftPostsByUserList.length == 0 ? (\n      <View\n        style={{ flex: 1, minHeight: height * 0.5, justifyContent: 'center', alignItems: 'center' }}\n      >\n        <InboxIconOutline size={40} color='grey' />\n        <Text className='text-sm color-grey font-raleway'>Vous n'avez pas de brouillons.</Text>\n      </View>\n    ) : null\n\n  const emptySumbittedDisplay =\n    submittedPostsData?.AllSubmittedPostsByUserList.length == 0 ? (\n      <View\n        style={{ flex: 1, minHeight: height * 0.5, justifyContent: 'center', alignItems: 'center' }}\n      >\n        <InboxIconOutline size={40} color='grey' />\n        <Text className='text-sm color-grey font-raleway'>Vous n'avez pas encore publié.</Text>\n      </View>\n    ) : null\n\n  return (\n    <SafeAreaView className='flex-1 bg-white'>\n      <View className='flex flex-row justify-center'>\n        <Text\n          className={`text-xl  color-deepBlue font-ralewayBold ml-3 mb-5  ${\n            Platform.OS === 'ios' ? 'mt-6' : 'mt-12'\n          }`}\n        >\n          Vos publications\n        </Text>\n      </View>\n      <View\n        className='flex flex-row  mb-2 mx-3'\n        style={{ borderBottomWidth: 1, borderBottomColor: '#bfbfbf' }}\n      >\n        <TouchableOpacity\n          className={`w-1/2  flex justify-center items-center ${\n            !isDraftSelected ? 'border-b-2 border-deepBlue ' : 'border-b-2 border-white'\n          } `}\n          onPress={() => setIsDraftSelected(false)}\n        >\n          <Text\n            className={`text-sm  ${\n              !isDraftSelected ? 'font-ralewayBold mb-1  color-deepBlue ' : 'font-raleway mb-1'\n            } ml-3`}\n          >\n            Publiées\n            {submittedPostsData?.AllSubmittedPostsByUserList.length > 0 && (\n              <Badge // bg=\"red.400\"\n                colorScheme='success'\n                rounded='full'\n                mb={2}\n                mr={-2}\n                zIndex={1}\n                variant='subtle'\n                alignSelf='flex-start'\n                _text={{\n                  fontSize: 10,\n                }}\n              >\n                {submittedPostsData?.AllSubmittedPostsByUserList.length}\n              </Badge>\n            )}\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          className={`w-1/2 bg flex justify-center items-center ${\n            isDraftSelected ? 'border-b-2 border-deepBlue ' : 'border-b-2 border-white'\n          }`}\n          onPress={() => setIsDraftSelected(true)}\n        >\n          <Text\n            className={`text-sm color-deepBlue ${\n              isDraftSelected ? 'font-ralewayBold' : 'font-raleway'\n            } ml-3`}\n          >\n            Brouillons\n            {draftPostsData?.AllDraftPostsByUserList.length > 0 && (\n              <Badge // bg=\"red.400\"\n                colorScheme='default'\n                rounded='full'\n                mb={2}\n                mr={-2}\n                zIndex={1}\n                variant='subtle'\n                alignSelf='flex-start'\n                _text={{\n                  fontSize: 10,\n                }}\n              >\n                {draftPostsData?.AllDraftPostsByUserList.length}\n              </Badge>\n            )}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <ScrollView\n        className='mx-3 mt-2 '\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            tintColor='#87BC23'\n            colors={['#87BC23', '#139DB8']}\n          />\n        }\n      >\n        {!isDraftSelected && (\n          <>\n            {submittedPostsData?.AllSubmittedPostsByUserList.map((postItem, index) => {\n              return (\n                <>\n                  <PostCard\n                    key={index}\n                    id={postItem.id}\n                    title={postItem.title}\n                    picture={postItem.mainPicture}\n                    likes={postItem.likes}\n                    comments={postItem.comments}\n                    intro={postItem.intro}\n                    authorView='true'\n                    validated={postItem.validated}\n                  />\n                  <Divider bg='#dddddd' thickness='1' my='3' orientation='horizontal' />\n                </>\n              )\n            })}\n            {emptySumbittedDisplay}\n          </>\n        )}\n        {isDraftSelected && (\n          <>\n            {draftPostsData?.AllDraftPostsByUserList.map((postItem, index) => {\n              return (\n                <PostCard\n                  key={index}\n                  id={postItem.id}\n                  title={postItem.title}\n                  picture={postItem.mainPicture}\n                  likes={postItem.likes}\n                  comments={postItem.comments}\n                  intro={postItem.intro}\n                />\n              )\n            })}\n            {emptyDraftDisplay}\n          </>\n        )}\n      </ScrollView>\n      <View className='flex flex-row justify-center'>\n        <Text className='text-xl  color-deepBlue font-ralewayBold ml-3 mb-1 mt-4 text-center'>\n          {draftPostsData?.AllDraftPostsByUserList.length == 0 &&\n          submittedPostsData?.AllSubmittedPostsByUserList.length == 0\n            ? `Proposez votre première publication !`\n            : `Proposer une nouvelle publication`}\n        </Text>\n      </View>\n      <Button\n        className='mx-6 my-4'\n        onPress={() => {\n          console.log('clic')\n          navigation.navigate('AddNewPost')\n        }}\n      >\n        <PlusCircleIconOutline size={40} color='white' />\n      </Button>\n\n      <Modal isOpen={isOpen} safeAreaTop={true}>\n        <Modal.Content maxWidth='350'>\n          <Modal.Header>\n            <Text className='text-xl  color-deepBlue font-ralewayBold ml-3 text-center'>\n              Connectez-vous pour découvrir toutes les fonctionnalités\n            </Text>\n          </Modal.Header>\n          <Modal.Body>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate('BottomTabs', { screen: 'Profile' })\n                setIsOpen(false)\n              }}\n            >\n              <Text className='text-md  color-deepBlue font-ralewayBold ml-3 text-center'>\n                Se connecter ou s'inscrire\n              </Text>\n            </TouchableOpacity>\n          </Modal.Body>\n          <Modal.Footer onPress={() => navigation.navigate('Home')}>\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate('BottomTabs', { screen: 'Home' })\n                setIsOpen(false)\n              }}\n            >\n              <Text className='text-xs  color-deepBlue font-raleway ml-3 text-center'>\n                Non merci\n              </Text>\n            </TouchableOpacity>\n          </Modal.Footer>\n        </Modal.Content>\n      </Modal>\n    </SafeAreaView>\n  )\n}\n\nexport default UserPostsScreen\n"],"mappings":"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},"metadata":{},"sourceType":"module"}