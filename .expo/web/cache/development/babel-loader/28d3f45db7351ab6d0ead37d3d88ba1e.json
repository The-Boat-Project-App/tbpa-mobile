{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeStackNavigator from \"./HomeStack\";\nimport { setAccessToken, getRefreshToken } from \"../accessToken\";\nimport { userDataVar } from \"../variables/userData\";\nimport * as NavigationBar from 'expo-navigation-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RootNavigator = function RootNavigator() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  NavigationBar.setBackgroundColorAsync('white');\n  useEffect(function () {\n    var refreshToken = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var refreshToken = yield getRefreshToken();\n        console.log('token before fetch', refreshToken);\n        yield fetch(\"https://tbpa-backend.herokuapp.com\" + \"/refresh_token_from_mobile\", {\n          method: 'POST',\n          credentials: 'include',\n          headers: new Headers({\n            Authorization: \"Bearer \" + refreshToken\n          })\n        }).then(function () {\n          var _ref2 = _asyncToGenerator(function* (x) {\n            var response = yield x.json();\n            console.log('response', response);\n\n            setAccessToken(response.accessToken, response.refreshToken);\n            userDataVar({\n              firstName: response.firstName,\n              lastName: response.lastName,\n              avatar: response.avatar,\n              status: response.status,\n              email: response.email\n            });\n            setLoading(false);\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n      return function refreshToken() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    refreshToken();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsx(HomeStackNavigator, {})\n  });\n};\nexport default RootNavigator;","map":{"version":3,"names":["React","useEffect","useState","NavigationContainer","HomeStackNavigator","setAccessToken","getRefreshToken","userDataVar","NavigationBar","RootNavigator","loading","setLoading","setBackgroundColorAsync","refreshToken","console","log","fetch","method","credentials","headers","Headers","Authorization","then","x","response","json","accessToken","firstName","lastName","avatar","status","email"],"sources":["/Users/matthieu/Documents/tbpa-mobile/navigation/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { View } from 'react-native'\nimport HomeStackNavigator from './HomeStack'\nimport { setAccessToken, getRefreshToken } from '../accessToken'\nimport { userDataVar } from '../variables/userData'\nimport * as NavigationBar from 'expo-navigation-bar'\n\nconst RootNavigator = () => {\n  const [loading, setLoading] = useState(true)\n  NavigationBar.setBackgroundColorAsync('white')\n  useEffect(() => {\n    const refreshToken = async () => {\n      const refreshToken = await getRefreshToken()\n      console.log('token before fetch', refreshToken)\n      await fetch(`${process.env.API_URL}/refresh_token_from_mobile`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: new Headers({\n          Authorization: `Bearer ${refreshToken}`,\n        }),\n      }).then(async (x) => {\n        const response = await x.json()\n        console.log('response', response)\n        // console.log('accessToken', accessToken)\n        // console.log('refreshToken', refreshToken)\n\n        setAccessToken(response.accessToken, response.refreshToken)\n        userDataVar({\n          firstName: response.firstName,\n          lastName: response.lastName,\n          avatar: response.avatar,\n          status: response.status,\n          email: response.email,\n        })\n        setLoading(false)\n      })\n    }\n    refreshToken()\n  }, [])\n\n  return (\n    <NavigationContainer>\n      <HomeStackNavigator />\n    </NavigationContainer>\n  )\n}\n\nexport default RootNavigator\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,kBAAkB;AACzB,SAASC,cAAc,EAAEC,eAAe;AACxC,SAASC,WAAW;AACpB,OAAO,KAAKC,aAAa,MAAM,qBAAqB;AAAA;AAEpD,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,gBAA8BP,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCQ,OAAO;IAAEC,UAAU;EAC1BH,aAAa,CAACI,uBAAuB,CAAC,OAAO,CAAC;EAC9CX,SAAS,CAAC,YAAM;IACd,IAAMY,YAAY;MAAA,6BAAG,aAAY;QAC/B,IAAMA,YAAY,SAASP,eAAe,EAAE;QAC5CQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,YAAY,CAAC;QAC/C,MAAMG,KAAK,sEAAqD;UAC9DC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,SAAS;UACtBC,OAAO,EAAE,IAAIC,OAAO,CAAC;YACnBC,aAAa,cAAYR;UAC3B,CAAC;QACH,CAAC,CAAC,CAACS,IAAI;UAAA,8BAAC,WAAOC,CAAC,EAAK;YACnB,IAAMC,QAAQ,SAASD,CAAC,CAACE,IAAI,EAAE;YAC/BX,OAAO,CAACC,GAAG,CAAC,UAAU,EAAES,QAAQ,CAAC;;YAIjCnB,cAAc,CAACmB,QAAQ,CAACE,WAAW,EAAEF,QAAQ,CAACX,YAAY,CAAC;YAC3DN,WAAW,CAAC;cACVoB,SAAS,EAAEH,QAAQ,CAACG,SAAS;cAC7BC,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;cAC3BC,MAAM,EAAEL,QAAQ,CAACK,MAAM;cACvBC,MAAM,EAAEN,QAAQ,CAACM,MAAM;cACvBC,KAAK,EAAEP,QAAQ,CAACO;YAClB,CAAC,CAAC;YACFpB,UAAU,CAAC,KAAK,CAAC;UACnB,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC;MACJ,CAAC;MAAA;QAAA;MAAA;IAAA;IACDE,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,KAAC,mBAAmB;IAAA,UAClB,KAAC,kBAAkB;EAAG,EACF;AAE1B,CAAC;AAED,eAAeJ,aAAa"},"metadata":{},"sourceType":"module"}