{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { useReactiveVar } from '@apollo/client';\nimport { boatLocationVar } from \"../../variables/boatLocation\";\nimport { useGetAllPartnersQuery } from \"../../graphql/graphql\";\nimport LoadingView from \"../../components/LoadingView/LoadingView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MapScreen = function MapScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var navigation = useNavigation();\n\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    region = _useState2[0],\n    setRegion = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isMapReady = _useState4[0],\n    setIsMapReady = _useState4[1];\n  var _useGetAllPartnersQue = useGetAllPartnersQuery(),\n    partnersData = _useGetAllPartnersQue.data,\n    refetchPartnersData = _useGetAllPartnersQue.refetch;\n  var boatLocationInApollo = useReactiveVar(boatLocationVar);\n  var _onMapReady = function onMapReady() {\n    setIsMapReady(true);\n  };\n  var getInitialState = function getInitialState() {\n    return {\n      region: {\n        latitude: 43.3,\n        longitude: 8.4,\n        latitudeDelta: 12,\n        longitudeDelta: 12\n      }\n    };\n  };\n  var onRegionChange = function onRegionChange(region) {\n    setRegion({\n      region: region\n    });\n  };\n  if (!partnersData) {\n    return _jsx(LoadingView, {});\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(MapView, {\n      initialRegion: {\n        latitude: boatLocationInApollo.latitude,\n        longitude: boatLocationInApollo.longitude,\n        latitudeDelta: 8,\n        longitudeDelta: 8\n      },\n      style: styles.map,\n      onMapReady: function onMapReady() {\n        return _onMapReady();\n      },\n      children: [_jsx(Marker, {\n        coordinate: {\n          latitude: boatLocationInApollo.latitude,\n          longitude: boatLocationInApollo.longitude\n        },\n        title: \"Emplacement actuel du bateau :\",\n        description: boatLocationInApollo.name + \"  \" + boatLocationInApollo.latitude + \" \" + boatLocationInApollo.longitude,\n        image: require(\"../../assets/icons/sailboat.png\")\n      }), partnersData == null ? void 0 : partnersData.PartnersList.map(function (partnerItem, index) {\n        return _jsx(Marker, {\n          pinColor: '#0C617D',\n          title: partnerItem.name.FR,\n          coordinate: {\n            latitude: partnerItem.latitude,\n            longitude: partnerItem.longitude\n          },\n          children: _jsx(Callout, {\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                onPress: function onPress() {\n                  navigation.navigate('Partner', {\n                    partnerId: partnerItem.id\n                  });\n                },\n                children: partnerItem.name.FR\n              })\n            })\n          })\n        }, index);\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});\nexport default MapScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"relative\": {\n      \"position\": \"relative\"\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["useState","MapView","Marker","Callout","useReactiveVar","boatLocationVar","useGetAllPartnersQuery","LoadingView","useNavigation","MapScreen","navigation","region","setRegion","isMapReady","setIsMapReady","partnersData","data","refetchPartnersData","refetch","boatLocationInApollo","onMapReady","getInitialState","latitude","longitude","latitudeDelta","longitudeDelta","onRegionChange","styles","container","map","name","require","PartnersList","partnerItem","index","FR","navigate","partnerId","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"sources":["/Users/matthieu/Documents/tbpa-mobile/screens/MapScreen/MapScreen.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { View, Dimensions, StyleSheet, Text } from 'react-native'\nimport MapView, { Marker, Callout } from 'react-native-maps'\nimport { useReactiveVar } from '@apollo/client'\nimport { boatLocationVar } from '../../variables/boatLocation'\nimport { useGetAllPartnersQuery } from '../../graphql/graphql'\nimport LoadingView from '@components/LoadingView/LoadingView'\nimport { useNavigation } from '@react-navigation/native'\n\ninterface MapScreenProps {}\n\nconst MapScreen: React.FunctionComponent<MapScreenProps> = ({}) => {\n  const navigation = useNavigation()\n\n  // const size = useWindowDimensions()\n  // const { width, height } = size\n\n  const [region, setRegion] = useState({})\n  const [isMapReady, setIsMapReady] = useState(false)\n  const { data: partnersData, refetch: refetchPartnersData } = useGetAllPartnersQuery()\n\n  const boatLocationInApollo = useReactiveVar(boatLocationVar)\n  const onMapReady = () => {\n    setIsMapReady(true)\n  }\n\n  const getInitialState = () => {\n    return {\n      region: {\n        latitude: 43.3,\n        longitude: 8.4,\n        latitudeDelta: 12,\n        longitudeDelta: 12,\n      },\n    }\n  }\n\n  const onRegionChange = (region) => {\n    setRegion({ region })\n  }\n\n  if (!partnersData) {\n    return <LoadingView />\n  }\n  return (\n    <View style={styles.container}>\n      <MapView\n        initialRegion={{\n          latitude: boatLocationInApollo.latitude,\n          longitude: boatLocationInApollo.longitude,\n          latitudeDelta: 8,\n          longitudeDelta: 8,\n        }}\n        style={styles.map}\n        onMapReady={() => onMapReady()}\n      >\n        <Marker\n          coordinate={{\n            latitude: boatLocationInApollo.latitude,\n            longitude: boatLocationInApollo.longitude,\n          }}\n          title='Emplacement actuel du bateau :'\n          description={`${boatLocationInApollo.name}  ${boatLocationInApollo.latitude} ${boatLocationInApollo.longitude}`}\n          image={require('../../assets/icons/sailboat.png')} //uses relative file path.\n        />\n\n        {partnersData?.PartnersList.map((partnerItem, index) => {\n          return (\n            <Marker\n              key={index}\n              pinColor={'#0C617D'}\n              title={partnerItem.name.FR}\n              coordinate={{\n                latitude: partnerItem.latitude,\n                longitude: partnerItem.longitude,\n              }}\n            >\n              <Callout>\n                <View>\n                  <Text\n                    onPress={() => {\n                      navigation.navigate('Partner', { partnerId: partnerItem.id })\n                    }}\n                  >\n                    {partnerItem.name.FR}\n                  </Text>\n                </View>\n              </Callout>\n            </Marker>\n          )\n        })}\n      </MapView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n})\n\nexport default MapScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}