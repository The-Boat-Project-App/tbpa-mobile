{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SourceLoaderUri;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _RenderTTree = _interopRequireDefault(require(\"./RenderTTree\"));\nvar _sourceLoaderContext = _interopRequireDefault(require(\"./context/sourceLoaderContext\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar ERROR_STATE = {\n  error: true,\n  resolvedHTML: null\n};\nfunction loadHTMLResource(_x, _x2) {\n  return _loadHTMLResource.apply(this, arguments);\n}\nfunction _loadHTMLResource() {\n  _loadHTMLResource = _asyncToGenerator(function* (uri, _ref) {\n    var body = _ref.body,\n      headers = _ref.headers,\n      method = _ref.method;\n    var response = yield fetch(uri, {\n      body: body,\n      headers: headers,\n      method: method\n    });\n    if (response.ok) {\n      var html = yield response.text();\n      return {\n        resolvedHTML: html,\n        error: false\n      };\n    }\n    return ERROR_STATE;\n  });\n  return _loadHTMLResource.apply(this, arguments);\n}\nfunction useUriSourceLoader(_ref2) {\n  var source = _ref2.source,\n    onHTMLLoaded = _ref2.onHTMLLoaded;\n  var _ref3 = (0, _react.useState)({\n      error: false,\n      resolvedHTML: null\n    }),\n    _ref4 = _slicedToArray(_ref3, 2),\n    loadState = _ref4[0],\n    setState = _ref4[1];\n  var error = loadState.error;\n\n  (0, _react.useEffect)(function () {\n    var cancelled = false;\n    if (!error) {\n      setState({\n        error: false,\n        resolvedHTML: null\n      });\n      loadHTMLResource(source.uri, {\n        body: source.body,\n        headers: source.headers,\n        method: source.method\n      }).then(function (state) {\n        !cancelled && setState(state);\n      }).catch(function () {\n        !cancelled && setState(ERROR_STATE);\n      });\n    }\n    return function () {\n      cancelled = true;\n    };\n  }, [error, source.uri, source.body, source.headers, source.method]);\n  (0, _react.useEffect)(function () {\n    loadState.resolvedHTML && (onHTMLLoaded === null || onHTMLLoaded === void 0 ? void 0 : onHTMLLoaded.call(null, loadState.resolvedHTML));\n  }, [loadState.resolvedHTML, onHTMLLoaded]);\n  return loadState;\n}\nfunction SourceLoaderUri(props) {\n  var _ref5 = (0, _react.useContext)(_sourceLoaderContext.default),\n    remoteErrorView = _ref5.remoteErrorView,\n    remoteLoadingView = _ref5.remoteLoadingView;\n  var _useUriSourceLoader = useUriSourceLoader(props),\n    resolvedHTML = _useUriSourceLoader.resolvedHTML,\n    error = _useUriSourceLoader.error;\n  if (error) {\n    return remoteErrorView.call(null, props.source);\n  }\n  if (resolvedHTML === null) {\n    return remoteLoadingView.call(null, props.source);\n  }\n  return _react.default.createElement(_RenderTTree.default, {\n    document: resolvedHTML,\n    baseUrl: props.source.uri\n  });\n}","map":{"version":3,"mappings":"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","names":["ERROR_STATE","error","resolvedHTML","loadHTMLResource","uri","body","headers","method","response","fetch","ok","html","text","useUriSourceLoader","source","onHTMLLoaded","loadState","setState","cancelled","then","state","catch","call","SourceLoaderUri","props","sourceLoaderContext","remoteErrorView","remoteLoadingView","React","createElement","RenderTTree","document","baseUrl"],"sources":["SourceLoaderUri.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { HTMLSourceUri } from './shared-types';\nimport { SourceLoaderProps } from './internal-types';\nimport RenderTTree from './RenderTTree';\nimport sourceLoaderContext from './context/sourceLoaderContext';\n\ninterface LoaderInternalState {\n  error: boolean;\n  resolvedHTML: string | null;\n}\n\nconst ERROR_STATE = {\n  error: true,\n  resolvedHTML: null\n};\n\nasync function loadHTMLResource(\n  uri: string,\n  { body, headers, method }: Omit<HTMLSourceUri, 'uri'>\n): Promise<LoaderInternalState> {\n  const response = await fetch(uri, {\n    body,\n    headers,\n    method\n  });\n  if (response.ok) {\n    const html = await response.text();\n    return {\n      resolvedHTML: html,\n      error: false\n    };\n  }\n  return ERROR_STATE;\n}\n\nexport type UriSourceLoaderProps = {\n  source: HTMLSourceUri;\n} & SourceLoaderProps;\n\nfunction useUriSourceLoader({ source, onHTMLLoaded }: UriSourceLoaderProps) {\n  const [loadState, setState] = useState<LoaderInternalState>({\n    error: false,\n    resolvedHTML: null\n  });\n  const { error } = loadState;\n\n  // Effect to reload on uri changes\n  useEffect(() => {\n    let cancelled = false;\n    if (!error) {\n      setState({ error: false, resolvedHTML: null });\n      loadHTMLResource(source.uri, {\n        body: source.body,\n        headers: source.headers,\n        method: source.method\n      })\n        .then((state) => {\n          !cancelled && setState(state);\n        })\n        .catch(() => {\n          !cancelled && setState(ERROR_STATE);\n        });\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [error, source.uri, source.body, source.headers, source.method]);\n  useEffect(() => {\n    loadState.resolvedHTML && onHTMLLoaded?.call(null, loadState.resolvedHTML);\n  }, [loadState.resolvedHTML, onHTMLLoaded]);\n  return loadState;\n}\n\nexport default function SourceLoaderUri(props: UriSourceLoaderProps) {\n  const { remoteErrorView, remoteLoadingView } =\n    useContext(sourceLoaderContext);\n  const { resolvedHTML, error } = useUriSourceLoader(props);\n  if (error) {\n    return remoteErrorView.call(null, props.source);\n  }\n  if (resolvedHTML === null) {\n    return remoteLoadingView.call(null, props.source);\n  }\n  return React.createElement(RenderTTree, {\n    document: resolvedHTML!,\n    baseUrl: props.source.uri\n  });\n}\n"]},"metadata":{},"sourceType":"script"}