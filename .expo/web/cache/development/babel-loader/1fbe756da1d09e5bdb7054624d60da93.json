{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIMGNormalizedSource;\nvar _react = require(\"react\");\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\nfunction useIMGNormalizedSource(_ref) {\n  var source = _ref.source,\n    specifiedDimensions = _ref.specifiedDimensions;\n  var cachedDimensions = (0, _react.useRef)(specifiedDimensions);\n  var _ref2 = (0, _SharedPropsProvider.useSharedProps)(),\n    provideEmbeddedHeaders = _ref2.provideEmbeddedHeaders;\n  return (0, _react.useMemo)(function () {\n    if (source.uri && typeof provideEmbeddedHeaders === 'function') {\n      var _cachedDimensions$cur, _cachedDimensions$cur2;\n      var headers = provideEmbeddedHeaders(source.uri, 'img', {\n        printWidth: ((_cachedDimensions$cur = cachedDimensions.current) === null || _cachedDimensions$cur === void 0 ? void 0 : _cachedDimensions$cur.width) || undefined,\n        printHeight: ((_cachedDimensions$cur2 = cachedDimensions.current) === null || _cachedDimensions$cur2 === void 0 ? void 0 : _cachedDimensions$cur2.height) || undefined\n      });\n      if (headers) {\n        return _objectSpread({\n          headers: headers\n        }, source);\n      }\n    }\n    return source;\n  }, [provideEmbeddedHeaders, source]);\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;AACA;AAMe,SAASA,sBAAT,OAKZ;EAAA,IAJDC,MAD6C,QAC7CA,MAD6C;IAE7CC;EAIA,IAAMC,gBAAgB,GAAG,mBAAOD,mBAAP,CAAzB;EACA,YAAmC,0CAAnC;IAAQE;EACR,OAAO,oBAAQ,YAAM;IACnB,IAAIH,MAAM,CAACI,GAAP,IAAc,OAAOD,sBAAP,KAAkC,UAApD,EAAgE;MAAA;MAC9D,IAAME,OAAO,GAAGF,sBAAsB,CAACH,MAAM,CAACI,GAAR,EAAa,KAAb,EAAoB;QACxDE,UAAU,EAAE,0CAAgB,CAACC,OAAjB,gFAA0BC,KAA1B,KAAmCC,SADS;QAExDC,WAAW,EAAE,2CAAgB,CAACH,OAAjB,kFAA0BI,MAA1B,KAAoCF;MAFO,CAApB,CAAtC;MAIA,IAAIJ,OAAJ,EAAa;QACX;UACEA,OADK,EACLA;QADK,GAEFL;MAEN;IACF;IACD,OAAOA,MAAP;EACD,CAdM,EAcJ,CAACG,sBAAD,EAAyBH,MAAzB,CAdI,CAAP;AAeD","names":["useIMGNormalizedSource","source","specifiedDimensions","cachedDimensions","provideEmbeddedHeaders","uri","headers","printWidth","current","width","undefined","printHeight","height"],"sources":["useIMGNormalizedSource.ts"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport {\n  IncompleteImageDimensions,\n  UseIMGElementStateProps\n} from './img-types';\n\nexport default function useIMGNormalizedSource({\n  source,\n  specifiedDimensions\n}: Pick<UseIMGElementStateProps, 'source'> & {\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const cachedDimensions = useRef(specifiedDimensions);\n  const { provideEmbeddedHeaders } = useSharedProps();\n  return useMemo(() => {\n    if (source.uri && typeof provideEmbeddedHeaders === 'function') {\n      const headers = provideEmbeddedHeaders(source.uri, 'img', {\n        printWidth: cachedDimensions.current?.width || undefined,\n        printHeight: cachedDimensions.current?.height || undefined\n      });\n      if (headers) {\n        return {\n          headers,\n          ...source\n        };\n      }\n    }\n    return source;\n  }, [provideEmbeddedHeaders, source]);\n}\n"]},"metadata":{},"sourceType":"script"}